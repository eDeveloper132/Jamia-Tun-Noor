{
  "rootDirectory": "d:\\Jamia-Tun-Noor\\talabaoasatiza",
  "timestamp": "2025-10-22T13:16:17.044Z",
  "files": [
    {
      "path": ".env.example",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\.env.example",
      "name": ".env.example",
      "extension": ".example",
      "size": 161,
      "created": "2025-10-21T11:00:16.172Z",
      "modified": "2025-10-21T15:43:12.186Z",
      "content": "PORT = \nMONGO_PASSWORD = \nMONGO_USER = \nJWT_SECRET= replace_with_strong_secret\nJWT_EXPIRES_IN= 1d\nMAIL_USER= your-smtp-user\nMAIL_PASS= your-smtp-pass\nNODE_ENV = ",
      "lines": 8,
      "isText": false
    },
    {
      "path": "package.json",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\package.json",
      "name": "package.json",
      "extension": ".json",
      "size": 1100,
      "created": "2025-10-21T08:36:44.997Z",
      "modified": "2025-10-21T17:01:10.124Z",
      "content": "{\n  \"name\": \"talabaoasatiza\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Teacher & Student portal (Express + TypeScript + MongoDB + JWT + Nodemailer)\",\n  \"main\": \"./src/index.mjs\",\n  \"scripts\": {\n    \"start\": \"tsc && node ./src/index.mjs\",\n    \"seed\": \"ts-node --esm ./src/seed/seed.ts\",\n    \"seed:full\": \"node ./src/seed/fullSeed.js\"\n  },\n  \"engines\": { \"node\": \"22.x\" },\n  \"keywords\": [],\n  \"author\": \"Muhammad Ilyas\",\n  \"license\": \"ISC\",\n  \"type\": \"module\",\n  \"dependencies\": {\n    \"bcrypt\": \"^6.0.0\",\n    \"cookie-parser\": \"^1.4.7\",\n    \"cors\": \"^2.8.5\",\n    \"dotenv\": \"^17.2.3\",\n    \"express\": \"^5.1.0\",\n    \"jsonwebtoken\": \"^9.0.2\",\n    \"mongoose\": \"^8.19.2\",\n    \"nodemailer\": \"^7.0.9\",\n    \"pdfkit\": \"^0.17.2\",\n    \"serverless-http\": \"^4.0.0\"\n  },\n  \"devDependencies\": {\n    \"@types/bcrypt\": \"^6.0.0\",\n    \"@types/cookie-parser\": \"^1.4.9\",\n    \"@types/cors\": \"^2.8.19\",\n    \"@types/dotenv\": \"^6.1.1\",\n    \"@types/express\": \"^5.0.3\",\n    \"@types/jsonwebtoken\": \"^9.0.10\",\n    \"@types/node\": \"^24.9.1\",\n    \"@types/nodemailer\": \"^7.0.2\",\n    \"ts-node\": \"^10.9.2\",\n    \"ts-node-dev\": \"^2.0.0\"\n  }\n}\n",
      "lines": 41,
      "isText": true
    },
    {
      "path": "public\\index.html",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\public\\index.html",
      "name": "index.html",
      "extension": ".html",
      "size": 257,
      "created": "2025-10-21T09:47:16.362Z",
      "modified": "2025-10-21T09:47:27.912Z",
      "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Document</title>\r\n</head>\r\n<body>\r\n    <h1>talabaoasatiza Service is running</h1>\r\n</body>\r\n</html>",
      "lines": 11,
      "isText": true
    },
    {
      "path": "src\\config\\config.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\config\\config.d.ts",
      "name": "config.d.ts",
      "extension": ".ts",
      "size": 107,
      "created": "2025-10-21T09:44:42.012Z",
      "modified": "2025-10-21T17:02:57.198Z",
      "content": "import \"dotenv/config\";\ndeclare const URI: string;\nexport default URI;\n//# sourceMappingURL=config.d.ts.map",
      "lines": 4,
      "isText": true
    },
    {
      "path": "src\\config\\config.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\config\\config.d.ts.map",
      "name": "config.d.ts.map",
      "extension": ".map",
      "size": 171,
      "created": "2025-10-21T09:44:42.002Z",
      "modified": "2025-10-21T17:02:57.198Z",
      "content": "{\"version\":3,\"file\":\"config.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"config.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,eAAe,CAAC;AAEvB,QAAA,MAAM,GAAG,QAA4G,CAAA;AAErH,eAAe,GAAG,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\config\\config.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\config\\config.js",
      "name": "config.js",
      "extension": ".js",
      "size": 197,
      "created": "2025-10-21T09:44:41.986Z",
      "modified": "2025-10-21T17:02:57.190Z",
      "content": "import \"dotenv/config\";\nconst URI = `mongodb+srv://${process.env.MONGO_USER}:${process.env.MONGO_PASSWORD}@jamiatunnoor.ysmogph.mongodb.net/`;\nexport default URI;\n//# sourceMappingURL=config.js.map",
      "lines": 4,
      "isText": true
    },
    {
      "path": "src\\config\\config.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\config\\config.js.map",
      "name": "config.js.map",
      "extension": ".map",
      "size": 232,
      "created": "2025-10-21T09:44:41.984Z",
      "modified": "2025-10-21T17:02:57.190Z",
      "content": "{\"version\":3,\"file\":\"config.js\",\"sourceRoot\":\"\",\"sources\":[\"config.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,eAAe,CAAC;AAEvB,MAAM,GAAG,GAAG,iBAAiB,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,OAAO,CAAC,GAAG,CAAC,cAAc,oCAAoC,CAAA;AAErH,eAAe,GAAG,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\config\\config.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\config\\config.ts",
      "name": "config.ts",
      "extension": ".ts",
      "size": 167,
      "created": "2025-10-21T09:32:40.910Z",
      "modified": "2025-10-21T09:35:29.442Z",
      "content": "import \"dotenv/config\";\r\n\r\nconst URI = `mongodb+srv://${process.env.MONGO_USER}:${process.env.MONGO_PASSWORD}@jamiatunnoor.ysmogph.mongodb.net/`\r\n\r\nexport default URI;",
      "lines": 5,
      "isText": true
    },
    {
      "path": "src\\config\\db\\db.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\config\\db\\db.d.ts",
      "name": "db.d.ts",
      "extension": ".ts",
      "size": 339,
      "created": "2025-10-21T09:44:42.060Z",
      "modified": "2025-10-21T17:02:57.220Z",
      "content": "import mongoose from 'mongoose';\ninterface MongooseGlobal {\n    conn: typeof mongoose | null;\n    promise: Promise<typeof mongoose | null> | null;\n}\ndeclare global {\n    var mongoose: MongooseGlobal;\n}\ndeclare function connectToDatabase(): Promise<typeof mongoose | null>;\nexport default connectToDatabase;\n//# sourceMappingURL=db.d.ts.map",
      "lines": 11,
      "isText": true
    },
    {
      "path": "src\\config\\db\\db.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\config\\db\\db.d.ts.map",
      "name": "db.d.ts.map",
      "extension": ".map",
      "size": 398,
      "created": "2025-10-21T09:44:42.058Z",
      "modified": "2025-10-21T17:02:57.220Z",
      "content": "{\"version\":3,\"file\":\"db.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"db.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,QAAQ,MAAM,UAAU,CAAC;AAsBhC,UAAU,cAAc;IACtB,IAAI,EAAE,OAAO,QAAQ,GAAG,IAAI,CAAC;IAC7B,OAAO,EAAE,OAAO,CAAC,OAAO,QAAQ,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;CACjD;AAGD,OAAO,CAAC,MAAM,CAAC;IAGb,IAAI,QAAQ,EAAE,cAAc,CAAC;CAC9B;AAKD,iBAAe,iBAAiB,IAAI,OAAO,CAAC,OAAO,QAAQ,GAAG,IAAI,CAAC,CA6BlE;AAED,eAAe,iBAAiB,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\config\\db\\db.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\config\\db\\db.js",
      "name": "db.js",
      "extension": ".js",
      "size": 2105,
      "created": "2025-10-21T09:44:42.043Z",
      "modified": "2025-10-21T17:02:57.218Z",
      "content": "// lib/mongodb.ts\nimport mongoose from 'mongoose';\nimport URI from '../config.js';\nif (!URI) {\n    throw new Error('Invalid/Missing \"URI\"');\n}\nconst uri = process.env.MONGODB_URI;\nconst options = {\n    appName: 'JamiaTunNoorApp', // Optional: Name of your application\n    maxPoolSize: 20, // Maximum number of connections in the pool\n    minPoolSize: 5, // Minimum number of connections to keep open\n    connectTimeoutMS: 10000, // 10 seconds to establish a connection\n    socketTimeoutMS: 30000, // 30 seconds to wait for a server response\n    serverSelectionTimeoutMS: 10000, // 10 seconds to select a server\n    retryWrites: true, // Enable retryable writes\n    retryReads: true, // Enable retryable reads\n    // ssl: true,            // Uncomment and configure if SSL/TLS is required\n    // authMechanism: 'SCRAM-SHA-256', // Uncomment if specific auth mechanism is needed\n    // …any other mongoose options\n};\n// Initialize cache on first import\nglobal.mongoose ??= { conn: null, promise: null };\nasync function connectToDatabase() {\n    if (global.mongoose.conn) {\n        return global.mongoose.conn;\n    }\n    if (!global.mongoose.promise) {\n        global.mongoose.promise = mongoose\n            .connect(URI, options)\n            .then((mongooseInstance) => {\n            mongooseInstance.connection.on('error', (err) => {\n                console.error('⚠️ Mongoose connection error:', err);\n            });\n            mongooseInstance.connection.on('disconnected', () => {\n                console.warn('⚠️ Mongoose disconnected');\n            });\n            mongooseInstance.connection.on('reconnected', () => {\n                console.log('✅ Mongoose reconnected');\n            });\n            console.log('✅ MongoDB connected');\n            return mongooseInstance;\n        })\n            .catch((err) => {\n            console.error('❌ Failed to connect to MongoDB:', err);\n            return null;\n        });\n    }\n    global.mongoose.conn = await global.mongoose.promise;\n    return global.mongoose.conn;\n}\nexport default connectToDatabase;\n//# sourceMappingURL=db.js.map",
      "lines": 52,
      "isText": true
    },
    {
      "path": "src\\config\\db\\db.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\config\\db\\db.js.map",
      "name": "db.js.map",
      "extension": ".map",
      "size": 1762,
      "created": "2025-10-21T09:44:42.041Z",
      "modified": "2025-10-21T17:02:57.216Z",
      "content": "{\"version\":3,\"file\":\"db.js\",\"sourceRoot\":\"\",\"sources\":[\"db.ts\"],\"names\":[],\"mappings\":\"AAAA,iBAAiB;AACjB,OAAO,QAAQ,MAAM,UAAU,CAAC;AAChC,OAAO,GAAG,MAAM,cAAc,CAAC;AAC/B,IAAI,CAAC,GAAG,EAAE,CAAC;IACT,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;AAC3C,CAAC;AAED,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;AAEpC,MAAM,OAAO,GAA4B;IACvC,OAAO,EAAE,iBAAiB,EAAE,qCAAqC;IACjE,WAAW,EAAE,EAAE,EAAU,4CAA4C;IACrE,WAAW,EAAE,CAAC,EAAW,6CAA6C;IACtE,gBAAgB,EAAE,KAAK,EAAE,uCAAuC;IAChE,eAAe,EAAE,KAAK,EAAG,2CAA2C;IACpE,wBAAwB,EAAE,KAAK,EAAE,gCAAgC;IACjE,WAAW,EAAE,IAAI,EAAQ,0BAA0B;IACnD,UAAU,EAAE,IAAI,EAAS,yBAAyB;IAClD,0EAA0E;IAC1E,oFAAoF;IACpF,8BAA8B;CAC/B,CAAC;AAcF,mCAAmC;AACnC,MAAM,CAAC,QAAQ,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAElD,KAAK,UAAU,iBAAiB;IAC9B,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACzB,OAAO,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;IAC9B,CAAC;IAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QAC7B,MAAM,CAAC,QAAQ,CAAC,OAAO,GAAG,QAAQ;aAC/B,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC;aACrB,IAAI,CAAC,CAAC,gBAAgB,EAAE,EAAE;YACzB,gBAAgB,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE;gBAC9C,OAAO,CAAC,KAAK,CAAC,+BAA+B,EAAE,GAAG,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC;YACH,gBAAgB,CAAC,UAAU,CAAC,EAAE,CAAC,cAAc,EAAE,GAAG,EAAE;gBAClD,OAAO,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC;YACH,gBAAgB,CAAC,UAAU,CAAC,EAAE,CAAC,aAAa,EAAE,GAAG,EAAE;gBACjD,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;YACnC,OAAO,gBAAgB,CAAC;QAC1B,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;YACb,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,GAAG,CAAC,CAAC;YACtD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,MAAM,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC;IACrD,OAAO,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;AAC9B,CAAC;AAED,eAAe,iBAAiB,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\config\\db\\db.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\config\\db\\db.ts",
      "name": "db.ts",
      "extension": ".ts",
      "size": 2444,
      "created": "2025-10-21T09:36:03.301Z",
      "modified": "2025-10-21T11:03:03.903Z",
      "content": "// lib/mongodb.ts\r\nimport mongoose from 'mongoose';\r\nimport URI from '../config.js';\r\nif (!URI) {\r\n  throw new Error('Invalid/Missing \"URI\"');\r\n}\r\n\r\nconst uri = process.env.MONGODB_URI;\r\n\r\nconst options: mongoose.ConnectOptions = {\r\n  appName: 'JamiaTunNoorApp', // Optional: Name of your application\r\n  maxPoolSize: 20,         // Maximum number of connections in the pool\r\n  minPoolSize: 5,          // Minimum number of connections to keep open\r\n  connectTimeoutMS: 10000, // 10 seconds to establish a connection\r\n  socketTimeoutMS: 30000,  // 30 seconds to wait for a server response\r\n  serverSelectionTimeoutMS: 10000, // 10 seconds to select a server\r\n  retryWrites: true,       // Enable retryable writes\r\n  retryReads: true,        // Enable retryable reads\r\n  // ssl: true,            // Uncomment and configure if SSL/TLS is required\r\n  // authMechanism: 'SCRAM-SHA-256', // Uncomment if specific auth mechanism is needed\r\n  // …any other mongoose options\r\n};\r\n\r\ninterface MongooseGlobal {\r\n  conn: typeof mongoose | null;\r\n  promise: Promise<typeof mongoose | null> | null;\r\n}\r\n\r\n// Augment globalThis to include our custom mongoose cache\r\ndeclare global {\r\n  // disable eslint here since TS requires var in declare global\r\n  /* eslint-disable-next-line no-var */\r\n  var mongoose: MongooseGlobal;\r\n}\r\n\r\n// Initialize cache on first import\r\nglobal.mongoose ??= { conn: null, promise: null };\r\n\r\nasync function connectToDatabase(): Promise<typeof mongoose | null> {\r\n  if (global.mongoose.conn) {\r\n    return global.mongoose.conn;\r\n  }\r\n\r\n  if (!global.mongoose.promise) {\r\n    global.mongoose.promise = mongoose\r\n      .connect(URI, options)\r\n      .then((mongooseInstance) => {\r\n        mongooseInstance.connection.on('error', (err) => {\r\n          console.error('⚠️ Mongoose connection error:', err);\r\n        });\r\n        mongooseInstance.connection.on('disconnected', () => {\r\n          console.warn('⚠️ Mongoose disconnected');\r\n        });\r\n        mongooseInstance.connection.on('reconnected', () => {\r\n          console.log('✅ Mongoose reconnected');\r\n        });\r\n        console.log('✅ MongoDB connected');\r\n        return mongooseInstance;\r\n      })\r\n      .catch((err) => {\r\n        console.error('❌ Failed to connect to MongoDB:', err);\r\n        return null;\r\n      });\r\n  }\r\n\r\n  global.mongoose.conn = await global.mongoose.promise;\r\n  return global.mongoose.conn;\r\n}\r\n\r\nexport default connectToDatabase;",
      "lines": 70,
      "isText": true
    },
    {
      "path": "src\\controllers\\attendanceController.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\attendanceController.d.ts",
      "name": "attendanceController.d.ts",
      "extension": ".ts",
      "size": 445,
      "created": "2025-10-21T16:55:00.336Z",
      "modified": "2025-10-21T17:02:57.417Z",
      "content": "import type { Request, Response } from \"express\";\nexport declare function markAttendance(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;\nexport declare function bulkAttendance(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;\nexport declare function getUserAttendance(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;\n//# sourceMappingURL=attendanceController.d.ts.map",
      "lines": 5,
      "isText": true
    },
    {
      "path": "src\\controllers\\attendanceController.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\attendanceController.d.ts.map",
      "name": "attendanceController.d.ts.map",
      "extension": ".map",
      "size": 378,
      "created": "2025-10-21T16:55:00.334Z",
      "modified": "2025-10-21T17:02:57.417Z",
      "content": "{\"version\":3,\"file\":\"attendanceController.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"attendanceController.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AAKjD,wBAAsB,cAAc,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,+CAqB/D;AAED,wBAAsB,cAAc,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,+CAY/D;AAED,wBAAsB,iBAAiB,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,+CAgBlE\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\controllers\\attendanceController.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\attendanceController.js",
      "name": "attendanceController.js",
      "extension": ".js",
      "size": 2577,
      "created": "2025-10-21T16:55:00.323Z",
      "modified": "2025-10-21T17:02:57.413Z",
      "content": "import { AttendanceModel } from \"../models/Attendance.js\";\nimport { AuditLogModel } from \"../models/AuditLog.js\";\nimport mongoose from \"mongoose\";\nexport async function markAttendance(req, res) {\n    try {\n        const { userId, userRole, date, entryTime, exitTime, status, subject, className } = req.body;\n        if (!userId || !userRole || !date)\n            return res.status(400).json({ error: \"Missing fields\" });\n        const attendance = await AttendanceModel.create({\n            user: userId,\n            userRole,\n            date,\n            entryTime,\n            exitTime,\n            status: status || \"present\",\n            subject,\n            className,\n            markedBy: req.user._id\n        });\n        await AuditLogModel.create({ actor: req.user._id, action: \"mark_attendance\", collectionName: \"Attendance\", documentId: attendance._id, after: attendance });\n        return res.json({ attendance });\n    }\n    catch (err) {\n        console.error(err);\n        return res.status(500).json({ error: \"Server error\" });\n    }\n}\nexport async function bulkAttendance(req, res) {\n    try {\n        const entries = req.body.entries; // array of attendance objects\n        if (!Array.isArray(entries))\n            return res.status(400).json({ error: \"entries must be array\" });\n        const docs = entries.map((e) => ({ ...e, markedBy: req.user._id }));\n        const created = await AttendanceModel.insertMany(docs);\n        await AuditLogModel.create({ actor: req.user._id, action: \"bulk_attendance\", collectionName: \"Attendance\", after: created.slice(0, 5) });\n        return res.json({ createdCount: created.length, created });\n    }\n    catch (err) {\n        console.error(err);\n        return res.status(500).json({ error: \"Server error\" });\n    }\n}\nexport async function getUserAttendance(req, res) {\n    try {\n        const userId = req.params.userId;\n        const { start, end } = req.query;\n        const q = { user: userId };\n        if (start && end)\n            q.date = { $gte: start, $lte: end };\n        const records = await AttendanceModel.find(q).sort({ date: 1 });\n        // basic percentage\n        const total = records.length;\n        const present = records.filter(r => r.status === \"present\").length;\n        const percentage = total === 0 ? 0 : Math.round((present / total) * 10000) / 100;\n        return res.json({ total, present, percentage, records });\n    }\n    catch (err) {\n        console.error(err);\n        return res.status(500).json({ error: \"Server error\" });\n    }\n}\n//# sourceMappingURL=attendanceController.js.map",
      "lines": 62,
      "isText": true
    },
    {
      "path": "src\\controllers\\attendanceController.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\attendanceController.js.map",
      "name": "attendanceController.js.map",
      "extension": ".map",
      "size": 3152,
      "created": "2025-10-21T16:55:00.323Z",
      "modified": "2025-10-21T17:02:57.413Z",
      "content": "{\"version\":3,\"file\":\"attendanceController.js\",\"sourceRoot\":\"\",\"sources\":[\"attendanceController.ts\"],\"names\":[],\"mappings\":\"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\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\controllers\\attendanceController.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\attendanceController.ts",
      "name": "attendanceController.ts",
      "extension": ".ts",
      "size": 2512,
      "created": "2025-10-21T11:07:42.232Z",
      "modified": "2025-10-21T11:44:53.880Z",
      "content": "import type { Request, Response } from \"express\";\r\nimport { AttendanceModel } from \"../models/Attendance.js\";\r\nimport { AuditLogModel } from \"../models/AuditLog.js\";\r\nimport mongoose from \"mongoose\";\r\n\r\nexport async function markAttendance(req: Request, res: Response) {\r\n  try {\r\n    const { userId, userRole, date, entryTime, exitTime, status, subject, className } = req.body;\r\n    if (!userId || !userRole || !date) return res.status(400).json({ error: \"Missing fields\" });\r\n    const attendance = await AttendanceModel.create({\r\n      user: userId,\r\n      userRole,\r\n      date,\r\n      entryTime,\r\n      exitTime,\r\n      status: status || \"present\",\r\n      subject,\r\n      className,\r\n      markedBy: (req as any).user._id\r\n    });\r\n    await AuditLogModel.create({ actor: (req as any).user._id, action: \"mark_attendance\", collectionName: \"Attendance\", documentId: attendance._id, after: attendance });\r\n    return res.json({ attendance });\r\n  } catch (err) {\r\n    console.error(err);\r\n    return res.status(500).json({ error: \"Server error\" });\r\n  }\r\n}\r\n\r\nexport async function bulkAttendance(req: Request, res: Response) {\r\n  try {\r\n    const entries = req.body.entries; // array of attendance objects\r\n    if (!Array.isArray(entries)) return res.status(400).json({ error: \"entries must be array\" });\r\n    const docs = entries.map((e: any) => ({ ...e, markedBy: (req as any).user._id }));\r\n    const created = await AttendanceModel.insertMany(docs);\r\n    await AuditLogModel.create({ actor: (req as any).user._id, action: \"bulk_attendance\", collectionName: \"Attendance\", after: created.slice(0, 5) });\r\n    return res.json({ createdCount: created.length, created });\r\n  } catch (err) {\r\n    console.error(err);\r\n    return res.status(500).json({ error: \"Server error\" });\r\n  }\r\n}\r\n\r\nexport async function getUserAttendance(req: Request, res: Response) {\r\n  try {\r\n    const userId = req.params.userId;\r\n    const { start, end } = req.query;\r\n    const q: any = { user: userId };\r\n    if (start && end) q.date = { $gte: start, $lte: end };\r\n    const records = await AttendanceModel.find(q).sort({ date: 1 });\r\n    // basic percentage\r\n    const total = records.length;\r\n    const present = records.filter(r => r.status === \"present\").length;\r\n    const percentage = total === 0 ? 0 : Math.round((present / total) * 10000) / 100;\r\n    return res.json({ total, present, percentage, records });\r\n  } catch (err) {\r\n    console.error(err);\r\n    return res.status(500).json({ error: \"Server error\" });\r\n  }\r\n}\r\n",
      "lines": 60,
      "isText": true
    },
    {
      "path": "src\\controllers\\authController.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\authController.d.ts",
      "name": "authController.d.ts",
      "extension": ".ts",
      "size": 327,
      "created": "2025-10-21T16:55:00.139Z",
      "modified": "2025-10-21T17:02:57.278Z",
      "content": "import type { Request, Response } from \"express\";\nexport declare function registerController(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;\nexport declare function loginController(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;\n//# sourceMappingURL=authController.d.ts.map",
      "lines": 4,
      "isText": true
    },
    {
      "path": "src\\controllers\\authController.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\authController.d.ts.map",
      "name": "authController.d.ts.map",
      "extension": ".map",
      "size": 301,
      "created": "2025-10-21T16:55:00.139Z",
      "modified": "2025-10-21T17:02:57.278Z",
      "content": "{\"version\":3,\"file\":\"authController.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"authController.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AAKjD,wBAAsB,kBAAkB,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,+CAcnE;AAED,wBAAsB,eAAe,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,+CAiBhE\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\controllers\\authController.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\authController.js",
      "name": "authController.js",
      "extension": ".js",
      "size": 2097,
      "created": "2025-10-21T16:55:00.138Z",
      "modified": "2025-10-21T17:02:57.271Z",
      "content": "import { UserModel } from \"../models/User.js\";\nimport { hashPassword, comparePassword } from \"../utils/hash.js\";\nimport { signJwt } from \"../utils/jwt.js\";\nexport async function registerController(req, res) {\n    try {\n        const { email, password, name, role, className, subjects } = req.body;\n        if (!email || !password || !name || !role)\n            return res.status(400).json({ error: \"Missing fields\" });\n        const existing = await UserModel.findOne({ email });\n        if (existing)\n            return res.status(400).json({ error: \"Email already exists\" });\n        const passwordHash = await hashPassword(password);\n        const user = await UserModel.create({ email, passwordHash, name, role, className, subjects });\n        const token = signJwt({ userId: user._id });\n        return res.json({ user: { id: user._id, email: user.email, name: user.name, role: user.role, className: user.className }, token });\n    }\n    catch (err) {\n        console.error(err);\n        return res.status(500).json({ error: \"Server error\" });\n    }\n}\nexport async function loginController(req, res) {\n    try {\n        const { email, password } = req.body;\n        if (!email || !password)\n            return res.status(400).json({ error: \"Missing fields\" });\n        if (typeof email !== \"string\" || typeof password !== \"string\") {\n            return res.status(400).json({ error: \"Invalid field types\" });\n        }\n        const user = await UserModel.findOne({ email });\n        if (!user)\n            return res.status(400).json({ error: \"Invalid credentials\" });\n        const ok = await comparePassword(password, user.passwordHash);\n        if (!ok)\n            return res.status(400).json({ error: \"Invalid credentials\" });\n        const token = signJwt({ userId: user._id });\n        return res.json({ user: { id: user._id, email: user.email, name: user.name, role: user.role, className: user.className }, token });\n    }\n    catch (err) {\n        console.error(err);\n        return res.status(500).json({ error: \"Server error\" });\n    }\n}\n//# sourceMappingURL=authController.js.map",
      "lines": 44,
      "isText": true
    },
    {
      "path": "src\\controllers\\authController.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\authController.js.map",
      "name": "authController.js.map",
      "extension": ".map",
      "size": 2699,
      "created": "2025-10-21T16:55:00.137Z",
      "modified": "2025-10-21T17:02:57.271Z",
      "content": "{\"version\":3,\"file\":\"authController.js\",\"sourceRoot\":\"\",\"sources\":[\"authController.ts\"],\"names\":[],\"mappings\":\"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\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\controllers\\authController.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\authController.ts",
      "name": "authController.ts",
      "extension": ".ts",
      "size": 2010,
      "created": "2025-10-21T11:07:11.867Z",
      "modified": "2025-10-21T13:21:06.846Z",
      "content": "import type { Request, Response } from \"express\";\r\nimport { UserModel } from \"../models/User.js\";\r\nimport { hashPassword, comparePassword } from \"../utils/hash.js\";\r\nimport { signJwt } from \"../utils/jwt.js\";\r\n\r\nexport async function registerController(req: Request, res: Response) {\r\n  try {\r\n    const { email, password, name, role, className, subjects } = req.body;\r\n    if (!email || !password || !name || !role) return res.status(400).json({ error: \"Missing fields\" });\r\n    const existing = await UserModel.findOne({ email });\r\n    if (existing) return res.status(400).json({ error: \"Email already exists\" });\r\n    const passwordHash = await hashPassword(password);\r\n    const user = await UserModel.create({ email, passwordHash, name, role, className, subjects });\r\n    const token = signJwt({ userId: user._id });\r\n    return res.json({ user: { id: user._id, email: user.email, name: user.name, role: user.role, className: user.className }, token });\r\n  } catch (err) {\r\n    console.error(err);\r\n    return res.status(500).json({ error: \"Server error\" });\r\n  }\r\n}\r\n\r\nexport async function loginController(req: Request, res: Response) {\r\n  try {\r\n    const { email, password } = req.body;\r\n    if (!email || !password) return res.status(400).json({ error: \"Missing fields\" });\r\n    if (typeof email !== \"string\" || typeof password !== \"string\") {\r\n      return res.status(400).json({ error: \"Invalid field types\" });\r\n    }\r\n    const user = await UserModel.findOne({ email });\r\n    if (!user) return res.status(400).json({ error: \"Invalid credentials\" });\r\n    const ok = await comparePassword(password, user.passwordHash);\r\n    if (!ok) return res.status(400).json({ error: \"Invalid credentials\" });\r\n    const token = signJwt({ userId: user._id });\r\n    return res.json({ user: { id: user._id, email: user.email, name: user.name, role: user.role, className: user.className }, token });\r\n  } catch (err) {\r\n    console.error(err);\r\n    return res.status(500).json({ error: \"Server error\" });\r\n  }\r\n}\r\n",
      "lines": 40,
      "isText": true
    },
    {
      "path": "src\\controllers\\examController.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\examController.d.ts",
      "name": "examController.d.ts",
      "extension": ".ts",
      "size": 320,
      "created": "2025-10-21T16:55:00.407Z",
      "modified": "2025-10-21T17:02:57.475Z",
      "content": "import type { Request, Response } from \"express\";\nexport declare function createExam(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;\nexport declare function getExamsForClass(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;\n//# sourceMappingURL=examController.d.ts.map",
      "lines": 4,
      "isText": true
    },
    {
      "path": "src\\controllers\\examController.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\examController.d.ts.map",
      "name": "examController.d.ts.map",
      "extension": ".map",
      "size": 300,
      "created": "2025-10-21T16:55:00.405Z",
      "modified": "2025-10-21T17:02:57.473Z",
      "content": "{\"version\":3,\"file\":\"examController.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"examController.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AAGjD,wBAAsB,UAAU,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,+CAU3D;AAED,wBAAsB,gBAAgB,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,+CAIjE\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\controllers\\examController.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\examController.js",
      "name": "examController.js",
      "extension": ".js",
      "size": 827,
      "created": "2025-10-21T16:55:00.396Z",
      "modified": "2025-10-21T17:02:57.469Z",
      "content": "import { ExamModel } from \"../models/Exam.js\";\nexport async function createExam(req, res) {\n    try {\n        const { title, subject, className, date, startTime, endTime } = req.body;\n        if (!title || !className || !date)\n            return res.status(400).json({ error: \"Missing fields\" });\n        const exam = await ExamModel.create({ title, subject, className, date, startTime, endTime, createdBy: req.user._id });\n        return res.json({ exam });\n    }\n    catch (err) {\n        console.error(err);\n        return res.status(500).json({ error: \"Server error\" });\n    }\n}\nexport async function getExamsForClass(req, res) {\n    const className = req.params.className;\n    const exams = await ExamModel.find({ className }).sort({ date: 1 });\n    return res.json({ exams });\n}\n//# sourceMappingURL=examController.js.map",
      "lines": 20,
      "isText": true
    },
    {
      "path": "src\\controllers\\examController.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\examController.js.map",
      "name": "examController.js.map",
      "extension": ".map",
      "size": 1155,
      "created": "2025-10-21T16:55:00.396Z",
      "modified": "2025-10-21T17:02:57.469Z",
      "content": "{\"version\":3,\"file\":\"examController.js\",\"sourceRoot\":\"\",\"sources\":[\"examController.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAE9C,MAAM,CAAC,KAAK,UAAU,UAAU,CAAC,GAAY,EAAE,GAAa;IAC1D,IAAI,CAAC;QACH,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;QACzE,IAAI,CAAC,KAAK,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI;YAAE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAC;QAC5F,MAAM,IAAI,GAAG,MAAM,SAAS,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAG,GAAW,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QAC/H,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;IAC5B,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC,CAAC;IACzD,CAAC;AACH,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,gBAAgB,CAAC,GAAY,EAAE,GAAa;IAChE,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;IACvC,MAAM,KAAK,GAAG,MAAM,SAAS,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;IACpE,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;AAC7B,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\controllers\\examController.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\examController.ts",
      "name": "examController.ts",
      "extension": ".ts",
      "size": 852,
      "created": "2025-10-21T11:08:10.253Z",
      "modified": "2025-10-21T11:46:23.591Z",
      "content": "import type { Request, Response } from \"express\";\r\nimport { ExamModel } from \"../models/Exam.js\";\r\n\r\nexport async function createExam(req: Request, res: Response) {\r\n  try {\r\n    const { title, subject, className, date, startTime, endTime } = req.body;\r\n    if (!title || !className || !date) return res.status(400).json({ error: \"Missing fields\" });\r\n    const exam = await ExamModel.create({ title, subject, className, date, startTime, endTime, createdBy: (req as any).user._id });\r\n    return res.json({ exam });\r\n  } catch (err) {\r\n    console.error(err);\r\n    return res.status(500).json({ error: \"Server error\" });\r\n  }\r\n}\r\n\r\nexport async function getExamsForClass(req: Request, res: Response) {\r\n  const className = req.params.className;\r\n  const exams = await ExamModel.find({ className }).sort({ date: 1 });\r\n  return res.json({ exams });\r\n}\r\n",
      "lines": 21,
      "isText": true
    },
    {
      "path": "src\\controllers\\taskController.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\taskController.d.ts",
      "name": "taskController.d.ts",
      "extension": ".ts",
      "size": 435,
      "created": "2025-10-21T16:55:00.373Z",
      "modified": "2025-10-21T17:02:57.447Z",
      "content": "import type { Request, Response } from \"express\";\nexport declare function createTask(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;\nexport declare function getTasksForUser(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;\nexport declare function updateTaskStatus(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;\n//# sourceMappingURL=taskController.d.ts.map",
      "lines": 5,
      "isText": true
    },
    {
      "path": "src\\controllers\\taskController.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\taskController.d.ts.map",
      "name": "taskController.d.ts.map",
      "extension": ".map",
      "size": 364,
      "created": "2025-10-21T16:55:00.373Z",
      "modified": "2025-10-21T17:02:57.447Z",
      "content": "{\"version\":3,\"file\":\"taskController.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"taskController.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AAGjD,wBAAsB,UAAU,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,+CAY3D;AAED,wBAAsB,eAAe,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,+CAIhE;AAED,wBAAsB,gBAAgB,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,+CAKjE\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\controllers\\taskController.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\taskController.js",
      "name": "taskController.js",
      "extension": ".js",
      "size": 1186,
      "created": "2025-10-21T16:55:00.368Z",
      "modified": "2025-10-21T17:02:57.439Z",
      "content": "import { TaskModel } from \"../models/Task.js\";\nexport async function createTask(req, res) {\n    try {\n        const { title, description, subject, assignedTo, assignedDate, dueDate } = req.body;\n        if (!title || !subject || !assignedTo || !assignedDate)\n            return res.status(400).json({ error: \"Missing fields\" });\n        const task = await TaskModel.create({\n            title, description, subject, assignedTo, assignedBy: req.user._id, assignedDate, dueDate\n        });\n        return res.json({ task });\n    }\n    catch (err) {\n        console.error(err);\n        return res.status(500).json({ error: \"Server error\" });\n    }\n}\nexport async function getTasksForUser(req, res) {\n    const userId = req.params.userId;\n    const tasks = await TaskModel.find({ assignedTo: userId }).sort({ createdAt: -1 });\n    return res.json({ tasks });\n}\nexport async function updateTaskStatus(req, res) {\n    const { status } = req.body;\n    const task = await TaskModel.findByIdAndUpdate(req.params.id, { status }, { new: true });\n    if (!task)\n        return res.status(404).json({ error: \"Not found\" });\n    return res.json({ task });\n}\n//# sourceMappingURL=taskController.js.map",
      "lines": 29,
      "isText": true
    },
    {
      "path": "src\\controllers\\taskController.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\taskController.js.map",
      "name": "taskController.js.map",
      "extension": ".map",
      "size": 1598,
      "created": "2025-10-21T16:55:00.367Z",
      "modified": "2025-10-21T17:02:57.439Z",
      "content": "{\"version\":3,\"file\":\"taskController.js\",\"sourceRoot\":\"\",\"sources\":[\"taskController.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAE9C,MAAM,CAAC,KAAK,UAAU,UAAU,CAAC,GAAY,EAAE,GAAa;IAC1D,IAAI,CAAC;QACH,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;QACpF,IAAI,CAAC,KAAK,IAAI,CAAC,OAAO,IAAI,CAAC,UAAU,IAAI,CAAC,YAAY;YAAE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAC;QACjH,MAAM,IAAI,GAAG,MAAM,SAAS,CAAC,MAAM,CAAC;YAClC,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAG,GAAW,CAAC,IAAI,CAAC,GAAG,EAAE,YAAY,EAAE,OAAO;SAClG,CAAC,CAAC;QACH,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;IAC5B,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC,CAAC;IACzD,CAAC;AACH,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,eAAe,CAAC,GAAY,EAAE,GAAa;IAC/D,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;IACjC,MAAM,KAAK,GAAG,MAAM,SAAS,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnF,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;AAC7B,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,gBAAgB,CAAC,GAAY,EAAE,GAAa;IAChE,MAAM,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;IAC5B,MAAM,IAAI,GAAG,MAAM,SAAS,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;IACzF,IAAI,CAAC,IAAI;QAAE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,CAAC;IAC/D,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;AAC5B,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\controllers\\taskController.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\taskController.ts",
      "name": "taskController.ts",
      "extension": ".ts",
      "size": 1214,
      "created": "2025-10-21T11:07:55.342Z",
      "modified": "2025-10-21T11:45:54.152Z",
      "content": "import type { Request, Response } from \"express\";\r\nimport { TaskModel } from \"../models/Task.js\";\r\n\r\nexport async function createTask(req: Request, res: Response) {\r\n  try {\r\n    const { title, description, subject, assignedTo, assignedDate, dueDate } = req.body;\r\n    if (!title || !subject || !assignedTo || !assignedDate) return res.status(400).json({ error: \"Missing fields\" });\r\n    const task = await TaskModel.create({\r\n      title, description, subject, assignedTo, assignedBy: (req as any).user._id, assignedDate, dueDate\r\n    });\r\n    return res.json({ task });\r\n  } catch (err) {\r\n    console.error(err);\r\n    return res.status(500).json({ error: \"Server error\" });\r\n  }\r\n}\r\n\r\nexport async function getTasksForUser(req: Request, res: Response) {\r\n  const userId = req.params.userId;\r\n  const tasks = await TaskModel.find({ assignedTo: userId }).sort({ createdAt: -1 });\r\n  return res.json({ tasks });\r\n}\r\n\r\nexport async function updateTaskStatus(req: Request, res: Response) {\r\n  const { status } = req.body;\r\n  const task = await TaskModel.findByIdAndUpdate(req.params.id, { status }, { new: true });\r\n  if (!task) return res.status(404).json({ error: \"Not found\" });\r\n  return res.json({ task });\r\n}\r\n",
      "lines": 30,
      "isText": true
    },
    {
      "path": "src\\controllers\\userController.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\userController.d.ts",
      "name": "userController.d.ts",
      "extension": ".ts",
      "size": 530,
      "created": "2025-10-21T16:55:00.251Z",
      "modified": "2025-10-21T17:02:57.342Z",
      "content": "import type { Request, Response } from \"express\";\nexport declare function listUsers(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;\nexport declare function createUser(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;\nexport declare function getUser(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;\nexport declare function updateUser(req: Request, res: Response): Promise<Response<any, Record<string, any>>>;\n//# sourceMappingURL=userController.d.ts.map",
      "lines": 6,
      "isText": true
    },
    {
      "path": "src\\controllers\\userController.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\userController.d.ts.map",
      "name": "userController.d.ts.map",
      "extension": ".map",
      "size": 426,
      "created": "2025-10-21T16:55:00.251Z",
      "modified": "2025-10-21T17:02:57.342Z",
      "content": "{\"version\":3,\"file\":\"userController.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"userController.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AAIjD,wBAAsB,SAAS,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,+CAS1D;AAED,wBAAsB,UAAU,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,+CAY3D;AAED,wBAAsB,OAAO,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,+CAIxD;AAED,wBAAsB,UAAU,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,+CAM3D\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\controllers\\userController.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\userController.js",
      "name": "userController.js",
      "extension": ".js",
      "size": 1961,
      "created": "2025-10-21T16:55:00.247Z",
      "modified": "2025-10-21T17:02:57.342Z",
      "content": "import { UserModel } from \"../models/User.js\";\nimport { hashPassword } from \"../utils/hash.js\";\nexport async function listUsers(req, res) {\n    const { role, className, page = \"1\", limit = \"50\" } = req.query;\n    const q = {};\n    if (role)\n        q.role = role;\n    if (className)\n        q.className = className;\n    const p = Math.max(1, Number(page));\n    const l = Math.min(500, Number(limit));\n    const users = await UserModel.find(q).skip((p - 1) * l).limit(l).select(\"-passwordHash\");\n    return res.json({ users });\n}\nexport async function createUser(req, res) {\n    try {\n        const { email, password, name, role, className, subjects } = req.body;\n        if (!email || !password || !name || !role)\n            return res.status(400).json({ error: \"Missing fields\" });\n        if (await UserModel.findOne({ email }))\n            return res.status(400).json({ error: \"Email exists\" });\n        const passwordHash = await hashPassword(password);\n        const user = await UserModel.create({ email, passwordHash, name, role, className, subjects });\n        return res.json({ user: { id: user._id, email: user.email, name: user.name, role: user.role } });\n    }\n    catch (err) {\n        console.error(err);\n        return res.status(500).json({ error: \"Server error\" });\n    }\n}\nexport async function getUser(req, res) {\n    const user = await UserModel.findById(req.params.id).select(\"-passwordHash\");\n    if (!user)\n        return res.status(404).json({ error: \"Not found\" });\n    return res.json({ user });\n}\nexport async function updateUser(req, res) {\n    const update = req.body;\n    if (update.password)\n        delete update.password; // don't allow raw password change here\n    const user = await UserModel.findByIdAndUpdate(req.params.id, update, { new: true }).select(\"-passwordHash\");\n    if (!user)\n        return res.status(404).json({ error: \"Not found\" });\n    return res.json({ user });\n}\n//# sourceMappingURL=userController.js.map",
      "lines": 46,
      "isText": true
    },
    {
      "path": "src\\controllers\\userController.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\userController.js.map",
      "name": "userController.js.map",
      "extension": ".map",
      "size": 2712,
      "created": "2025-10-21T16:55:00.247Z",
      "modified": "2025-10-21T17:02:57.342Z",
      "content": "{\"version\":3,\"file\":\"userController.js\",\"sourceRoot\":\"\",\"sources\":[\"userController.ts\"],\"names\":[],\"mappings\":\"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\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\controllers\\userController.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers\\userController.ts",
      "name": "userController.ts",
      "extension": ".ts",
      "size": 1958,
      "created": "2025-10-21T11:07:26.491Z",
      "modified": "2025-10-21T11:44:03.496Z",
      "content": "import type { Request, Response } from \"express\";\r\nimport { UserModel } from \"../models/User.js\";\r\nimport { hashPassword } from \"../utils/hash.js\";\r\n\r\nexport async function listUsers(req: Request, res: Response) {\r\n  const { role, className, page = \"1\", limit = \"50\" } = req.query;\r\n  const q: any = {};\r\n  if (role) q.role = role;\r\n  if (className) q.className = className;\r\n  const p = Math.max(1, Number(page));\r\n  const l = Math.min(500, Number(limit));\r\n  const users = await UserModel.find(q).skip((p - 1) * l).limit(l).select(\"-passwordHash\");\r\n  return res.json({ users });\r\n}\r\n\r\nexport async function createUser(req: Request, res: Response) {\r\n  try {\r\n    const { email, password, name, role, className, subjects } = req.body;\r\n    if (!email || !password || !name || !role) return res.status(400).json({ error: \"Missing fields\" });\r\n    if (await UserModel.findOne({ email })) return res.status(400).json({ error: \"Email exists\" });\r\n    const passwordHash = await hashPassword(password);\r\n    const user = await UserModel.create({ email, passwordHash, name, role, className, subjects });\r\n    return res.json({ user: { id: user._id, email: user.email, name: user.name, role: user.role } });\r\n  } catch (err) {\r\n    console.error(err);\r\n    return res.status(500).json({ error: \"Server error\" });\r\n  }\r\n}\r\n\r\nexport async function getUser(req: Request, res: Response) {\r\n  const user = await UserModel.findById(req.params.id).select(\"-passwordHash\");\r\n  if (!user) return res.status(404).json({ error: \"Not found\" });\r\n  return res.json({ user });\r\n}\r\n\r\nexport async function updateUser(req: Request, res: Response) {\r\n  const update = req.body;\r\n  if (update.password) delete update.password; // don't allow raw password change here\r\n  const user = await UserModel.findByIdAndUpdate(req.params.id, update, { new: true }).select(\"-passwordHash\");\r\n  if (!user) return res.status(404).json({ error: \"Not found\" });\r\n  return res.json({ user });\r\n}\r\n",
      "lines": 43,
      "isText": true
    },
    {
      "path": "src\\index.d.mts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\index.d.mts",
      "name": "index.d.mts",
      "extension": ".mts",
      "size": 60,
      "created": "2025-10-21T16:55:00.429Z",
      "modified": "2025-10-21T17:02:57.494Z",
      "content": "import \"dotenv/config\";\n//# sourceMappingURL=index.d.mts.map",
      "lines": 2,
      "isText": false
    },
    {
      "path": "src\\index.d.mts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\index.d.mts.map",
      "name": "index.d.mts.map",
      "extension": ".map",
      "size": 118,
      "created": "2025-10-21T16:55:00.427Z",
      "modified": "2025-10-21T17:02:57.494Z",
      "content": "{\"version\":3,\"file\":\"index.d.mts\",\"sourceRoot\":\"\",\"sources\":[\"index.mts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,eAAe,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\index.mjs",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\index.mjs",
      "name": "index.mjs",
      "extension": ".mjs",
      "size": 1105,
      "created": "2025-10-21T16:55:00.427Z",
      "modified": "2025-10-21T17:02:57.491Z",
      "content": "import \"dotenv/config\";\nimport path from \"path\";\nimport express from 'express';\nimport cors from 'cors';\nimport cookieParser from 'cookie-parser';\nimport connectToDatabase from \"./config/db/db.js\";\nimport authRoutes from \"./routes/auth.js\";\nimport userRoutes from \"./routes/users.js\";\nimport attendanceRoutes from \"./routes/attendance.js\";\nimport taskRoutes from \"./routes/tasks.js\";\nimport examRoutes from \"./routes/exams.js\";\nconst app = express();\nconst PORT = process.env.PORT || 4000;\napp.use(cors());\napp.use(express.json());\nawait connectToDatabase();\napp.use(cookieParser());\napp.use(express.static(path.join('public')));\napp.get(\"/\", (req, res) => {\n    res.send(\"talabaoasatiza Service is running\");\n});\napp.use(\"/api/auth\", authRoutes);\napp.use(\"/api/users\", userRoutes);\napp.use(\"/api/attendance\", attendanceRoutes);\napp.use(\"/api/tasks\", taskRoutes);\napp.use(\"/api/exams\", examRoutes);\napp.use((req, res) => {\n    res.status(404).send(\"Route not found\");\n});\napp.listen(PORT, () => {\n    console.log(`talabaoasatiza Service is running on port ${PORT}`);\n});\n//# sourceMappingURL=index.mjs.map",
      "lines": 33,
      "isText": false
    },
    {
      "path": "src\\index.mjs.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\index.mjs.map",
      "name": "index.mjs.map",
      "extension": ".map",
      "size": 1458,
      "created": "2025-10-21T16:55:00.425Z",
      "modified": "2025-10-21T17:02:57.491Z",
      "content": "{\"version\":3,\"file\":\"index.mjs\",\"sourceRoot\":\"\",\"sources\":[\"index.mts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,eAAe,CAAC;AACvB,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,OAAO,MAAM,SAAS,CAAC;AAC9B,OAAO,IAAI,MAAM,MAAM,CAAC;AAExB,OAAO,YAAY,MAAM,eAAe,CAAC;AACzC,OAAO,iBAAiB,MAAM,mBAAmB,CAAC;AAClD,OAAO,UAAU,MAAM,kBAAkB,CAAC;AAC1C,OAAO,UAAU,MAAM,mBAAmB,CAAC;AAC3C,OAAO,gBAAgB,MAAM,wBAAwB,CAAC;AACtD,OAAO,UAAU,MAAM,mBAAmB,CAAC;AAC3C,OAAO,UAAU,MAAM,mBAAmB,CAAC;AAE3C,MAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AACtB,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AAEtC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AAChB,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AACxB,MAAM,iBAAiB,EAAE,CAAC;AAC1B,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;AAExB,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC7C,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACzC,GAAG,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC;AAGD,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;AACjC,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AAClC,GAAG,CAAC,GAAG,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,CAAC;AAC7C,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AAClC,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;AAGpC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACpC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;IAClB,OAAO,CAAC,GAAG,CAAC,6CAA6C,IAAI,EAAE,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\index.mts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\index.mts",
      "name": "index.mts",
      "extension": ".mts",
      "size": 1216,
      "created": "2025-10-21T09:19:58.560Z",
      "modified": "2025-10-21T15:55:21.272Z",
      "content": "import \"dotenv/config\";\r\nimport path from \"path\";\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport type { Request, Response } from 'express';\r\nimport cookieParser from 'cookie-parser';\r\nimport connectToDatabase from \"./config/db/db.js\";\r\nimport authRoutes from \"./routes/auth.js\";\r\nimport userRoutes from \"./routes/users.js\";\r\nimport attendanceRoutes from \"./routes/attendance.js\";\r\nimport taskRoutes from \"./routes/tasks.js\";\r\nimport examRoutes from \"./routes/exams.js\";\r\n\r\nconst app = express();\r\nconst PORT = process.env.PORT || 4000;\r\n\r\napp.use(cors());\r\napp.use(express.json());\r\nawait connectToDatabase();\r\napp.use(cookieParser());\r\n\r\napp.use(express.static(path.join('public')));\r\napp.get(\"/\", (req: Request, res: Response) => {\r\n    res.send(\"talabaoasatiza Service is running\");\r\n});\r\n\r\n\r\n  app.use(\"/api/auth\", authRoutes);\r\n  app.use(\"/api/users\", userRoutes);\r\n  app.use(\"/api/attendance\", attendanceRoutes);\r\n  app.use(\"/api/tasks\", taskRoutes);\r\n  app.use(\"/api/exams\", examRoutes);\r\n\r\n\r\napp.use((req: Request, res: Response) => {\r\n    res.status(404).send(\"Route not found\");\r\n});\r\n\r\napp.listen(PORT, () => {\r\n    console.log(`talabaoasatiza Service is running on port ${PORT}`);\r\n});",
      "lines": 41,
      "isText": false
    },
    {
      "path": "src\\models\\Attendance.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Attendance.d.ts",
      "name": "Attendance.d.ts",
      "extension": ".ts",
      "size": 684,
      "created": "2025-10-21T16:55:00.300Z",
      "modified": "2025-10-21T17:02:57.393Z",
      "content": "import mongoose from \"mongoose\";\nexport type AttendanceStatus = \"present\" | \"absent\" | \"leave\" | \"late\";\nexport interface IAttendance extends mongoose.Document {\n    user: mongoose.Types.ObjectId;\n    userRole: \"student\" | \"teacher\";\n    className?: string;\n    subject?: string;\n    date: string;\n    entryTime?: string;\n    exitTime?: string;\n    status: AttendanceStatus;\n    markedBy: mongoose.Types.ObjectId;\n    notes?: string;\n}\nexport declare const AttendanceModel: mongoose.Model<IAttendance, {}, {}, {}, mongoose.Document<unknown, {}, IAttendance, {}, {}> & IAttendance & Required<{\n    _id: unknown;\n}> & {\n    __v: number;\n}, any>;\n//# sourceMappingURL=Attendance.d.ts.map",
      "lines": 20,
      "isText": true
    },
    {
      "path": "src\\models\\Attendance.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Attendance.d.ts.map",
      "name": "Attendance.d.ts.map",
      "extension": ".map",
      "size": 622,
      "created": "2025-10-21T16:55:00.297Z",
      "modified": "2025-10-21T17:02:57.393Z",
      "content": "{\"version\":3,\"file\":\"Attendance.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"Attendance.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,QAAQ,MAAM,UAAU,CAAC;AAEhC,MAAM,MAAM,gBAAgB,GAAG,SAAS,GAAG,QAAQ,GAAG,OAAO,GAAG,MAAM,CAAC;AAEvE,MAAM,WAAW,WAAY,SAAQ,QAAQ,CAAC,QAAQ;IACpD,IAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC9B,QAAQ,EAAE,SAAS,GAAG,SAAS,CAAC;IAChC,SAAS,CAAC,EAAE,MAAM,CAAC;IACnB,OAAO,CAAC,EAAE,MAAM,CAAC;IACjB,IAAI,EAAE,MAAM,CAAC;IACb,SAAS,CAAC,EAAE,MAAM,CAAC;IACnB,QAAQ,CAAC,EAAE,MAAM,CAAC;IAClB,MAAM,EAAE,gBAAgB,CAAC;IACzB,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;IAClC,KAAK,CAAC,EAAE,MAAM,CAAC;CAChB;AAiBD,eAAO,MAAM,eAAe;;;;OAA8D,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\models\\Attendance.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Attendance.js",
      "name": "Attendance.js",
      "extension": ".js",
      "size": 773,
      "created": "2025-10-21T16:55:00.291Z",
      "modified": "2025-10-21T17:02:57.385Z",
      "content": "import mongoose from \"mongoose\";\nconst AttendanceSchema = new mongoose.Schema({\n    user: { type: mongoose.Schema.Types.ObjectId, ref: \"User\", required: true },\n    userRole: { type: String, enum: [\"student\", \"teacher\"], required: true },\n    className: String,\n    subject: String,\n    date: { type: String, required: true, index: true },\n    entryTime: String,\n    exitTime: String,\n    status: { type: String, enum: [\"present\", \"absent\", \"leave\", \"late\"], default: \"present\" },\n    markedBy: { type: mongoose.Schema.Types.ObjectId, ref: \"User\", required: true },\n    notes: String\n}, { timestamps: true });\nAttendanceSchema.index({ user: 1, date: 1 });\nexport const AttendanceModel = mongoose.model(\"Attendance\", AttendanceSchema);\n//# sourceMappingURL=Attendance.js.map",
      "lines": 16,
      "isText": true
    },
    {
      "path": "src\\models\\Attendance.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Attendance.js.map",
      "name": "Attendance.js.map",
      "extension": ".map",
      "size": 1018,
      "created": "2025-10-21T16:55:00.290Z",
      "modified": "2025-10-21T17:02:57.385Z",
      "content": "{\"version\":3,\"file\":\"Attendance.js\",\"sourceRoot\":\"\",\"sources\":[\"Attendance.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,QAAQ,MAAM,UAAU,CAAC;AAiBhC,MAAM,gBAAgB,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAc;IACxD,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC3E,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE;IACxE,SAAS,EAAE,MAAM;IACjB,OAAO,EAAE,MAAM;IACf,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;IACnD,SAAS,EAAE,MAAM;IACjB,QAAQ,EAAE,MAAM;IAChB,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,SAAS,EAAC,QAAQ,EAAC,OAAO,EAAC,MAAM,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE;IACvF,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC/E,KAAK,EAAE,MAAM;CACd,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;AAEzB,gBAAgB,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;AAE7C,MAAM,CAAC,MAAM,eAAe,GAAG,QAAQ,CAAC,KAAK,CAAc,YAAY,EAAE,gBAAgB,CAAC,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\models\\Attendance.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Attendance.ts",
      "name": "Attendance.ts",
      "extension": ".ts",
      "size": 1197,
      "created": "2025-10-21T11:04:35.668Z",
      "modified": "2025-10-21T11:23:48.246Z",
      "content": "import mongoose from \"mongoose\";\r\n\r\nexport type AttendanceStatus = \"present\" | \"absent\" | \"leave\" | \"late\";\r\n\r\nexport interface IAttendance extends mongoose.Document {\r\n  user: mongoose.Types.ObjectId;\r\n  userRole: \"student\" | \"teacher\";\r\n  className?: string;\r\n  subject?: string;\r\n  date: string;        // YYYY-MM-DD\r\n  entryTime?: string;  // e.g. \"08:00\"\r\n  exitTime?: string;\r\n  status: AttendanceStatus;\r\n  markedBy: mongoose.Types.ObjectId;\r\n  notes?: string;\r\n}\r\n\r\nconst AttendanceSchema = new mongoose.Schema<IAttendance>({\r\n  user: { type: mongoose.Schema.Types.ObjectId, ref: \"User\", required: true },\r\n  userRole: { type: String, enum: [\"student\", \"teacher\"], required: true },\r\n  className: String,\r\n  subject: String,\r\n  date: { type: String, required: true, index: true },\r\n  entryTime: String,\r\n  exitTime: String,\r\n  status: { type: String, enum: [\"present\",\"absent\",\"leave\",\"late\"], default: \"present\" },\r\n  markedBy: { type: mongoose.Schema.Types.ObjectId, ref: \"User\", required: true },\r\n  notes: String\r\n}, { timestamps: true });\r\n\r\nAttendanceSchema.index({ user: 1, date: 1 });\r\n\r\nexport const AttendanceModel = mongoose.model<IAttendance>(\"Attendance\", AttendanceSchema);\r\n",
      "lines": 34,
      "isText": true
    },
    {
      "path": "src\\models\\AuditLog.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\AuditLog.d.ts",
      "name": "AuditLog.d.ts",
      "extension": ".ts",
      "size": 471,
      "created": "2025-10-21T16:55:00.313Z",
      "modified": "2025-10-21T17:02:57.402Z",
      "content": "import mongoose from \"mongoose\";\nexport interface IAuditLog extends mongoose.Document {\n    actor?: mongoose.Types.ObjectId;\n    action: string;\n    collectionName?: string;\n    documentId?: any;\n    before?: any;\n    after?: any;\n}\nexport declare const AuditLogModel: mongoose.Model<IAuditLog, {}, {}, {}, mongoose.Document<unknown, {}, IAuditLog, {}, {}> & IAuditLog & Required<{\n    _id: unknown;\n}> & {\n    __v: number;\n}, any>;\n//# sourceMappingURL=AuditLog.d.ts.map",
      "lines": 15,
      "isText": true
    },
    {
      "path": "src\\models\\AuditLog.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\AuditLog.d.ts.map",
      "name": "AuditLog.d.ts.map",
      "extension": ".map",
      "size": 411,
      "created": "2025-10-21T16:55:00.309Z",
      "modified": "2025-10-21T17:02:57.402Z",
      "content": "{\"version\":3,\"file\":\"AuditLog.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"AuditLog.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,QAAQ,MAAM,UAAU,CAAC;AAEhC,MAAM,WAAW,SAAU,SAAQ,QAAQ,CAAC,QAAQ;IAClD,KAAK,CAAC,EAAE,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;IAChC,MAAM,EAAE,MAAM,CAAC;IACf,cAAc,CAAC,EAAE,MAAM,CAAC;IACxB,UAAU,CAAC,EAAE,GAAG,CAAC;IACjB,MAAM,CAAC,EAAE,GAAG,CAAC;IACb,KAAK,CAAC,EAAE,GAAG,CAAC;CACb;AAWD,eAAO,MAAM,aAAa;;;;OAAwD,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\models\\AuditLog.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\AuditLog.js",
      "name": "AuditLog.js",
      "extension": ".js",
      "size": 452,
      "created": "2025-10-21T16:55:00.303Z",
      "modified": "2025-10-21T17:02:57.398Z",
      "content": "import mongoose from \"mongoose\";\nconst AuditLogSchema = new mongoose.Schema({\n    actor: { type: mongoose.Schema.Types.ObjectId, ref: \"User\" },\n    action: String,\n    collectionName: String,\n    documentId: mongoose.Schema.Types.Mixed,\n    before: mongoose.Schema.Types.Mixed,\n    after: mongoose.Schema.Types.Mixed\n}, { timestamps: true });\nexport const AuditLogModel = mongoose.model(\"AuditLog\", AuditLogSchema);\n//# sourceMappingURL=AuditLog.js.map",
      "lines": 11,
      "isText": true
    },
    {
      "path": "src\\models\\AuditLog.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\AuditLog.js.map",
      "name": "AuditLog.js.map",
      "extension": ".map",
      "size": 583,
      "created": "2025-10-21T16:55:00.303Z",
      "modified": "2025-10-21T17:02:57.396Z",
      "content": "{\"version\":3,\"file\":\"AuditLog.js\",\"sourceRoot\":\"\",\"sources\":[\"AuditLog.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,QAAQ,MAAM,UAAU,CAAC;AAWhC,MAAM,cAAc,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAY;IACpD,KAAK,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE;IAC5D,MAAM,EAAE,MAAM;IACd,cAAc,EAAE,MAAM;IACtB,UAAU,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK;IACvC,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK;IACnC,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK;CACnC,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;AAEzB,MAAM,CAAC,MAAM,aAAa,GAAG,QAAQ,CAAC,KAAK,CAAY,UAAU,EAAE,cAAc,CAAC,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\models\\AuditLog.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\AuditLog.ts",
      "name": "AuditLog.ts",
      "extension": ".ts",
      "size": 638,
      "created": "2025-10-21T11:05:07.974Z",
      "modified": "2025-10-21T11:25:42.474Z",
      "content": "import mongoose from \"mongoose\";\r\n\r\nexport interface IAuditLog extends mongoose.Document {\r\n  actor?: mongoose.Types.ObjectId;\r\n  action: string;\r\n  collectionName?: string;\r\n  documentId?: any;\r\n  before?: any;\r\n  after?: any;\r\n}\r\n\r\nconst AuditLogSchema = new mongoose.Schema<IAuditLog>({\r\n  actor: { type: mongoose.Schema.Types.ObjectId, ref: \"User\" },\r\n  action: String,\r\n  collectionName: String,\r\n  documentId: mongoose.Schema.Types.Mixed,\r\n  before: mongoose.Schema.Types.Mixed,\r\n  after: mongoose.Schema.Types.Mixed\r\n}, { timestamps: true });\r\n\r\nexport const AuditLogModel = mongoose.model<IAuditLog>(\"AuditLog\", AuditLogSchema);\r\n",
      "lines": 22,
      "isText": true
    },
    {
      "path": "src\\models\\Class.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Class.d.ts",
      "name": "Class.d.ts",
      "extension": ".ts",
      "size": 354,
      "created": "2025-10-21T16:55:00.439Z",
      "modified": "2025-10-21T17:02:57.502Z",
      "content": "import mongoose from \"mongoose\";\nexport interface IClass extends mongoose.Document {\n    name: string;\n    description?: string;\n}\nexport declare const ClassModel: mongoose.Model<IClass, {}, {}, {}, mongoose.Document<unknown, {}, IClass, {}, {}> & IClass & Required<{\n    _id: unknown;\n}> & {\n    __v: number;\n}, any>;\n//# sourceMappingURL=Class.d.ts.map",
      "lines": 11,
      "isText": true
    },
    {
      "path": "src\\models\\Class.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Class.d.ts.map",
      "name": "Class.d.ts.map",
      "extension": ".map",
      "size": 263,
      "created": "2025-10-21T16:55:00.439Z",
      "modified": "2025-10-21T17:02:57.502Z",
      "content": "{\"version\":3,\"file\":\"Class.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"Class.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,QAAQ,MAAM,UAAU,CAAC;AAEhC,MAAM,WAAW,MAAO,SAAQ,QAAQ,CAAC,QAAQ;IAC/C,IAAI,EAAE,MAAM,CAAC;IACb,WAAW,CAAC,EAAE,MAAM,CAAC;CACtB;AAOD,eAAO,MAAM,UAAU;;;;OAA+C,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\models\\Class.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Class.js",
      "name": "Class.js",
      "extension": ".js",
      "size": 280,
      "created": "2025-10-21T16:55:00.433Z",
      "modified": "2025-10-21T17:02:57.496Z",
      "content": "import mongoose from \"mongoose\";\nconst ClassSchema = new mongoose.Schema({\n    name: { type: String, required: true, unique: true },\n    description: String\n}, { timestamps: true });\nexport const ClassModel = mongoose.model(\"Class\", ClassSchema);\n//# sourceMappingURL=Class.js.map",
      "lines": 7,
      "isText": true
    },
    {
      "path": "src\\models\\Class.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Class.js.map",
      "name": "Class.js.map",
      "extension": ".map",
      "size": 394,
      "created": "2025-10-21T16:55:00.433Z",
      "modified": "2025-10-21T17:02:57.496Z",
      "content": "{\"version\":3,\"file\":\"Class.js\",\"sourceRoot\":\"\",\"sources\":[\"Class.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,QAAQ,MAAM,UAAU,CAAC;AAOhC,MAAM,WAAW,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAS;IAC9C,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;IACpD,WAAW,EAAE,MAAM;CACpB,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;AAEzB,MAAM,CAAC,MAAM,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAS,OAAO,EAAE,WAAW,CAAC,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\models\\Class.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Class.ts",
      "name": "Class.ts",
      "extension": ".ts",
      "size": 369,
      "created": "2025-10-21T11:04:01.887Z",
      "modified": "2025-10-21T11:22:38.231Z",
      "content": "import mongoose from \"mongoose\";\r\n\r\nexport interface IClass extends mongoose.Document {\r\n  name: string;\r\n  description?: string;\r\n}\r\n\r\nconst ClassSchema = new mongoose.Schema<IClass>({\r\n  name: { type: String, required: true, unique: true },\r\n  description: String\r\n}, { timestamps: true });\r\n\r\nexport const ClassModel = mongoose.model<IClass>(\"Class\", ClassSchema);\r\n",
      "lines": 14,
      "isText": true
    },
    {
      "path": "src\\models\\Exam.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Exam.d.ts",
      "name": "Exam.d.ts",
      "extension": ".ts",
      "size": 610,
      "created": "2025-10-21T16:55:00.391Z",
      "modified": "2025-10-21T17:02:57.463Z",
      "content": "import mongoose from \"mongoose\";\nexport interface IExamResult {\n    student: mongoose.Types.ObjectId;\n    marks: number;\n    total: number;\n}\nexport interface IExam extends mongoose.Document {\n    title: string;\n    subject: string;\n    className: string;\n    date: string;\n    startTime?: string;\n    endTime?: string;\n    createdBy?: mongoose.Types.ObjectId;\n    results?: IExamResult[];\n}\nexport declare const ExamModel: mongoose.Model<IExam, {}, {}, {}, mongoose.Document<unknown, {}, IExam, {}, {}> & IExam & Required<{\n    _id: unknown;\n}> & {\n    __v: number;\n}, any>;\n//# sourceMappingURL=Exam.d.ts.map",
      "lines": 22,
      "isText": true
    },
    {
      "path": "src\\models\\Exam.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Exam.d.ts.map",
      "name": "Exam.d.ts.map",
      "extension": ".map",
      "size": 578,
      "created": "2025-10-21T16:55:00.391Z",
      "modified": "2025-10-21T17:02:57.463Z",
      "content": "{\"version\":3,\"file\":\"Exam.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"Exam.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,QAAQ,MAAM,UAAU,CAAC;AAEhC,MAAM,WAAW,WAAW;IAC1B,OAAO,EAAE,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;IACjC,KAAK,EAAE,MAAM,CAAC;IACd,KAAK,EAAE,MAAM,CAAC;CACf;AAED,MAAM,WAAW,KAAM,SAAQ,QAAQ,CAAC,QAAQ;IAC9C,KAAK,EAAE,MAAM,CAAC;IACd,OAAO,EAAE,MAAM,CAAC;IAChB,SAAS,EAAE,MAAM,CAAC;IAClB,IAAI,EAAE,MAAM,CAAC;IACb,SAAS,CAAC,EAAE,MAAM,CAAC;IACnB,OAAO,CAAC,EAAE,MAAM,CAAC;IACjB,SAAS,CAAC,EAAE,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;IACpC,OAAO,CAAC,EAAE,WAAW,EAAE,CAAC;CACzB;AAaD,eAAO,MAAM,SAAS;;;;OAA4C,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\models\\Exam.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Exam.js",
      "name": "Exam.js",
      "extension": ".js",
      "size": 526,
      "created": "2025-10-21T16:55:00.386Z",
      "modified": "2025-10-21T17:02:57.458Z",
      "content": "import mongoose from \"mongoose\";\nconst ExamSchema = new mongoose.Schema({\n    title: { type: String, required: true },\n    subject: String,\n    className: String,\n    date: String,\n    startTime: String,\n    endTime: String,\n    createdBy: { type: mongoose.Schema.Types.ObjectId, ref: \"User\" },\n    results: [{ student: { type: mongoose.Schema.Types.ObjectId, ref: \"User\" }, marks: Number, total: Number }]\n}, { timestamps: true });\nexport const ExamModel = mongoose.model(\"Exam\", ExamSchema);\n//# sourceMappingURL=Exam.js.map",
      "lines": 13,
      "isText": true
    },
    {
      "path": "src\\models\\Exam.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Exam.js.map",
      "name": "Exam.js.map",
      "extension": ".map",
      "size": 706,
      "created": "2025-10-21T16:55:00.384Z",
      "modified": "2025-10-21T17:02:57.458Z",
      "content": "{\"version\":3,\"file\":\"Exam.js\",\"sourceRoot\":\"\",\"sources\":[\"Exam.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,QAAQ,MAAM,UAAU,CAAC;AAmBhC,MAAM,UAAU,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAQ;IAC5C,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACvC,OAAO,EAAE,MAAM;IACf,SAAS,EAAE,MAAM;IACjB,IAAI,EAAE,MAAM;IACZ,SAAS,EAAE,MAAM;IACjB,OAAO,EAAE,MAAM;IACf,SAAS,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE;IAChE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;CAC5G,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;AAEzB,MAAM,CAAC,MAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAQ,MAAM,EAAE,UAAU,CAAC,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\models\\Exam.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Exam.ts",
      "name": "Exam.ts",
      "extension": ".ts",
      "size": 864,
      "created": "2025-10-21T11:04:54.615Z",
      "modified": "2025-10-21T11:25:00.113Z",
      "content": "import mongoose from \"mongoose\";\r\n\r\nexport interface IExamResult {\r\n  student: mongoose.Types.ObjectId;\r\n  marks: number;\r\n  total: number;\r\n}\r\n\r\nexport interface IExam extends mongoose.Document {\r\n  title: string;\r\n  subject: string;\r\n  className: string;\r\n  date: string;\r\n  startTime?: string;\r\n  endTime?: string;\r\n  createdBy?: mongoose.Types.ObjectId;\r\n  results?: IExamResult[];\r\n}\r\n\r\nconst ExamSchema = new mongoose.Schema<IExam>({\r\n  title: { type: String, required: true },\r\n  subject: String,\r\n  className: String,\r\n  date: String,\r\n  startTime: String,\r\n  endTime: String,\r\n  createdBy: { type: mongoose.Schema.Types.ObjectId, ref: \"User\" },\r\n  results: [{ student: { type: mongoose.Schema.Types.ObjectId, ref: \"User\" }, marks: Number, total: Number }]\r\n}, { timestamps: true });\r\n\r\nexport const ExamModel = mongoose.model<IExam>(\"Exam\", ExamSchema);\r\n",
      "lines": 32,
      "isText": true
    },
    {
      "path": "src\\models\\Subject.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Subject.d.ts",
      "name": "Subject.d.ts",
      "extension": ".ts",
      "size": 364,
      "created": "2025-10-21T16:55:00.450Z",
      "modified": "2025-10-21T17:02:57.513Z",
      "content": "import mongoose from \"mongoose\";\nexport interface ISubject extends mongoose.Document {\n    name: string;\n    className?: string;\n}\nexport declare const SubjectModel: mongoose.Model<ISubject, {}, {}, {}, mongoose.Document<unknown, {}, ISubject, {}, {}> & ISubject & Required<{\n    _id: unknown;\n}> & {\n    __v: number;\n}, any>;\n//# sourceMappingURL=Subject.d.ts.map",
      "lines": 11,
      "isText": true
    },
    {
      "path": "src\\models\\Subject.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Subject.d.ts.map",
      "name": "Subject.d.ts.map",
      "extension": ".map",
      "size": 267,
      "created": "2025-10-21T16:55:00.450Z",
      "modified": "2025-10-21T17:02:57.511Z",
      "content": "{\"version\":3,\"file\":\"Subject.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"Subject.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,QAAQ,MAAM,UAAU,CAAC;AAEhC,MAAM,WAAW,QAAS,SAAQ,QAAQ,CAAC,QAAQ;IACjD,IAAI,EAAE,MAAM,CAAC;IACb,SAAS,CAAC,EAAE,MAAM,CAAC;CACpB;AAOD,eAAO,MAAM,YAAY;;;;OAAqD,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\models\\Subject.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Subject.js",
      "name": "Subject.js",
      "extension": ".js",
      "size": 274,
      "created": "2025-10-21T16:55:00.444Z",
      "modified": "2025-10-21T17:02:57.502Z",
      "content": "import mongoose from \"mongoose\";\nconst SubjectSchema = new mongoose.Schema({\n    name: { type: String, required: true },\n    className: String\n}, { timestamps: true });\nexport const SubjectModel = mongoose.model(\"Subject\", SubjectSchema);\n//# sourceMappingURL=Subject.js.map",
      "lines": 7,
      "isText": true
    },
    {
      "path": "src\\models\\Subject.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Subject.js.map",
      "name": "Subject.js.map",
      "extension": ".map",
      "size": 378,
      "created": "2025-10-21T16:55:00.444Z",
      "modified": "2025-10-21T17:02:57.502Z",
      "content": "{\"version\":3,\"file\":\"Subject.js\",\"sourceRoot\":\"\",\"sources\":[\"Subject.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,QAAQ,MAAM,UAAU,CAAC;AAOhC,MAAM,aAAa,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAW;IAClD,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACtC,SAAS,EAAE,MAAM;CAClB,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;AAEzB,MAAM,CAAC,MAAM,YAAY,GAAG,QAAQ,CAAC,KAAK,CAAW,SAAS,EAAE,aAAa,CAAC,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\models\\Subject.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Subject.ts",
      "name": "Subject.ts",
      "extension": ".ts",
      "size": 365,
      "created": "2025-10-21T11:04:11.783Z",
      "modified": "2025-10-21T11:23:30.442Z",
      "content": "import mongoose from \"mongoose\";\r\n\r\nexport interface ISubject extends mongoose.Document {\r\n  name: string;\r\n  className?: string;\r\n}\r\n\r\nconst SubjectSchema = new mongoose.Schema<ISubject>({\r\n  name: { type: String, required: true },\r\n  className: String\r\n}, { timestamps: true });\r\n\r\nexport const SubjectModel = mongoose.model<ISubject>(\"Subject\", SubjectSchema);\r\n",
      "lines": 14,
      "isText": true
    },
    {
      "path": "src\\models\\Task.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Task.d.ts",
      "name": "Task.d.ts",
      "extension": ".ts",
      "size": 574,
      "created": "2025-10-21T16:55:00.359Z",
      "modified": "2025-10-21T17:02:57.438Z",
      "content": "import mongoose from \"mongoose\";\nexport interface ITask extends mongoose.Document {\n    title: string;\n    description?: string;\n    subject: string;\n    assignedBy: mongoose.Types.ObjectId;\n    assignedTo: mongoose.Types.ObjectId[];\n    assignedDate: string;\n    dueDate?: string;\n    status: \"pending\" | \"done\" | \"overdue\";\n    attachments?: string[];\n}\nexport declare const TaskModel: mongoose.Model<ITask, {}, {}, {}, mongoose.Document<unknown, {}, ITask, {}, {}> & ITask & Required<{\n    _id: unknown;\n}> & {\n    __v: number;\n}, any>;\n//# sourceMappingURL=Task.d.ts.map",
      "lines": 18,
      "isText": true
    },
    {
      "path": "src\\models\\Task.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Task.d.ts.map",
      "name": "Task.d.ts.map",
      "extension": ".map",
      "size": 523,
      "created": "2025-10-21T16:55:00.359Z",
      "modified": "2025-10-21T17:02:57.438Z",
      "content": "{\"version\":3,\"file\":\"Task.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"Task.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,QAAQ,MAAM,UAAU,CAAC;AAEhC,MAAM,WAAW,KAAM,SAAQ,QAAQ,CAAC,QAAQ;IAC9C,KAAK,EAAE,MAAM,CAAC;IACd,WAAW,CAAC,EAAE,MAAM,CAAC;IACrB,OAAO,EAAE,MAAM,CAAC;IAChB,UAAU,EAAE,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;IACpC,UAAU,EAAE,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IACtC,YAAY,EAAE,MAAM,CAAC;IACrB,OAAO,CAAC,EAAE,MAAM,CAAC;IACjB,MAAM,EAAE,SAAS,GAAG,MAAM,GAAG,SAAS,CAAC;IACvC,WAAW,CAAC,EAAE,MAAM,EAAE,CAAC;CACxB;AAcD,eAAO,MAAM,SAAS;;;;OAA4C,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\models\\Task.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Task.js",
      "name": "Task.js",
      "extension": ".js",
      "size": 657,
      "created": "2025-10-21T16:55:00.355Z",
      "modified": "2025-10-21T17:02:57.433Z",
      "content": "import mongoose from \"mongoose\";\nconst TaskSchema = new mongoose.Schema({\n    title: { type: String, required: true },\n    description: String,\n    subject: { type: String, required: true },\n    assignedBy: { type: mongoose.Schema.Types.ObjectId, ref: \"User\", required: true },\n    assignedTo: [{ type: mongoose.Schema.Types.ObjectId, ref: \"User\" }],\n    assignedDate: { type: String, required: true },\n    dueDate: String,\n    status: { type: String, enum: [\"pending\", \"done\", \"overdue\"], default: \"pending\" },\n    attachments: [String]\n}, { timestamps: true });\nexport const TaskModel = mongoose.model(\"Task\", TaskSchema);\n//# sourceMappingURL=Task.js.map",
      "lines": 14,
      "isText": true
    },
    {
      "path": "src\\models\\Task.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Task.js.map",
      "name": "Task.js.map",
      "extension": ".map",
      "size": 868,
      "created": "2025-10-21T16:55:00.355Z",
      "modified": "2025-10-21T17:02:57.431Z",
      "content": "{\"version\":3,\"file\":\"Task.js\",\"sourceRoot\":\"\",\"sources\":[\"Task.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,QAAQ,MAAM,UAAU,CAAC;AAchC,MAAM,UAAU,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAQ;IAC5C,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACvC,WAAW,EAAE,MAAM;IACnB,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACzC,UAAU,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACjF,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;IACnE,YAAY,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC9C,OAAO,EAAE,MAAM;IACf,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,SAAS,EAAC,MAAM,EAAC,SAAS,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE;IAChF,WAAW,EAAE,CAAC,MAAM,CAAC;CACtB,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;AAEzB,MAAM,CAAC,MAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAQ,MAAM,EAAE,UAAU,CAAC,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\models\\Task.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\Task.ts",
      "name": "Task.ts",
      "extension": ".ts",
      "size": 966,
      "created": "2025-10-21T11:04:45.665Z",
      "modified": "2025-10-21T11:24:33.208Z",
      "content": "import mongoose from \"mongoose\";\r\n\r\nexport interface ITask extends mongoose.Document {\r\n  title: string;\r\n  description?: string;\r\n  subject: string;\r\n  assignedBy: mongoose.Types.ObjectId;\r\n  assignedTo: mongoose.Types.ObjectId[]; // students\r\n  assignedDate: string;\r\n  dueDate?: string;\r\n  status: \"pending\" | \"done\" | \"overdue\";\r\n  attachments?: string[];\r\n}\r\n\r\nconst TaskSchema = new mongoose.Schema<ITask>({\r\n  title: { type: String, required: true },\r\n  description: String,\r\n  subject: { type: String, required: true },\r\n  assignedBy: { type: mongoose.Schema.Types.ObjectId, ref: \"User\", required: true },\r\n  assignedTo: [{ type: mongoose.Schema.Types.ObjectId, ref: \"User\" }],\r\n  assignedDate: { type: String, required: true },\r\n  dueDate: String,\r\n  status: { type: String, enum: [\"pending\",\"done\",\"overdue\"], default: \"pending\" },\r\n  attachments: [String]\r\n}, { timestamps: true });\r\n\r\nexport const TaskModel = mongoose.model<ITask>(\"Task\", TaskSchema);\r\n",
      "lines": 28,
      "isText": true
    },
    {
      "path": "src\\models\\User.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\User.d.ts",
      "name": "User.d.ts",
      "extension": ".ts",
      "size": 557,
      "created": "2025-10-21T16:55:00.092Z",
      "modified": "2025-10-21T17:02:57.247Z",
      "content": "import mongoose from \"mongoose\";\nexport type Role = \"student\" | \"teacher\" | \"nazim\";\nexport interface IUser extends mongoose.Document {\n    email: string;\n    passwordHash: string;\n    name: string;\n    role: Role;\n    className?: string;\n    subjects?: string[];\n    isEmailVerified?: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n}\nexport declare const UserModel: mongoose.Model<IUser, {}, {}, {}, mongoose.Document<unknown, {}, IUser, {}, {}> & IUser & Required<{\n    _id: unknown;\n}> & {\n    __v: number;\n}, any>;\n//# sourceMappingURL=User.d.ts.map",
      "lines": 19,
      "isText": true
    },
    {
      "path": "src\\models\\User.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\User.d.ts.map",
      "name": "User.d.ts.map",
      "extension": ".map",
      "size": 512,
      "created": "2025-10-21T16:55:00.092Z",
      "modified": "2025-10-21T17:02:57.247Z",
      "content": "{\"version\":3,\"file\":\"User.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"User.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,QAAQ,MAAM,UAAU,CAAC;AAEhC,MAAM,MAAM,IAAI,GAAG,SAAS,GAAG,SAAS,GAAG,OAAO,CAAC;AAEnD,MAAM,WAAW,KAAM,SAAQ,QAAQ,CAAC,QAAQ;IAC9C,KAAK,EAAE,MAAM,CAAC;IACd,YAAY,EAAE,MAAM,CAAC;IACrB,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,IAAI,CAAC;IACX,SAAS,CAAC,EAAE,MAAM,CAAC;IACnB,QAAQ,CAAC,EAAE,MAAM,EAAE,CAAC;IACpB,eAAe,CAAC,EAAE,OAAO,CAAC;IAC1B,SAAS,EAAE,IAAI,CAAC;IAChB,SAAS,EAAE,IAAI,CAAC;CACjB;AAYD,eAAO,MAAM,SAAS;;;;OAA4C,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\models\\User.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\User.js",
      "name": "User.js",
      "extension": ".js",
      "size": 556,
      "created": "2025-10-21T16:55:00.069Z",
      "modified": "2025-10-21T17:02:57.226Z",
      "content": "import mongoose from \"mongoose\";\nconst UserSchema = new mongoose.Schema({\n    email: { type: String, required: true, unique: true, index: true },\n    passwordHash: { type: String, required: true },\n    name: { type: String, required: true },\n    role: { type: String, enum: [\"student\", \"teacher\", \"nazim\"], required: true },\n    className: { type: String },\n    subjects: [String],\n    isEmailVerified: { type: Boolean, default: false }\n}, { timestamps: true });\nexport const UserModel = mongoose.model(\"User\", UserSchema);\n//# sourceMappingURL=User.js.map",
      "lines": 12,
      "isText": true
    },
    {
      "path": "src\\models\\User.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\User.js.map",
      "name": "User.js.map",
      "extension": ".map",
      "size": 758,
      "created": "2025-10-21T16:55:00.069Z",
      "modified": "2025-10-21T17:02:57.226Z",
      "content": "{\"version\":3,\"file\":\"User.js\",\"sourceRoot\":\"\",\"sources\":[\"User.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,QAAQ,MAAM,UAAU,CAAC;AAgBhC,MAAM,UAAU,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAQ;IAC5C,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;IAClE,YAAY,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC9C,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACtC,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC7E,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IAC3B,QAAQ,EAAE,CAAC,MAAM,CAAC;IAClB,eAAe,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE;CACnD,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;AAEzB,MAAM,CAAC,MAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAQ,MAAM,EAAE,UAAU,CAAC,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\models\\User.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models\\User.ts",
      "name": "User.ts",
      "extension": ".ts",
      "size": 843,
      "created": "2025-10-21T11:03:51.844Z",
      "modified": "2025-10-21T11:21:44.635Z",
      "content": "import mongoose from \"mongoose\";\r\n\r\nexport type Role = \"student\" | \"teacher\" | \"nazim\";\r\n\r\nexport interface IUser extends mongoose.Document {\r\n  email: string;\r\n  passwordHash: string;\r\n  name: string;\r\n  role: Role;\r\n  className?: string;\r\n  subjects?: string[];\r\n  isEmailVerified?: boolean;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nconst UserSchema = new mongoose.Schema<IUser>({\r\n  email: { type: String, required: true, unique: true, index: true },\r\n  passwordHash: { type: String, required: true },\r\n  name: { type: String, required: true },\r\n  role: { type: String, enum: [\"student\", \"teacher\", \"nazim\"], required: true },\r\n  className: { type: String },\r\n  subjects: [String],\r\n  isEmailVerified: { type: Boolean, default: false }\r\n}, { timestamps: true });\r\n\r\nexport const UserModel = mongoose.model<IUser>(\"User\", UserSchema);\r\n",
      "lines": 28,
      "isText": true
    },
    {
      "path": "src\\routes\\attendance.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\attendance.d.ts",
      "name": "attendance.d.ts",
      "extension": ".ts",
      "size": 129,
      "created": "2025-10-21T16:55:00.344Z",
      "modified": "2025-10-21T17:02:57.430Z",
      "content": "declare const router: import(\"express-serve-static-core\").Router;\nexport default router;\n//# sourceMappingURL=attendance.d.ts.map",
      "lines": 3,
      "isText": true
    },
    {
      "path": "src\\routes\\attendance.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\attendance.d.ts.map",
      "name": "attendance.d.ts.map",
      "extension": ".map",
      "size": 159,
      "created": "2025-10-21T16:55:00.344Z",
      "modified": "2025-10-21T17:02:57.426Z",
      "content": "{\"version\":3,\"file\":\"attendance.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"attendance.ts\"],\"names\":[],\"mappings\":\"AAIA,QAAA,MAAM,MAAM,4CAAmB,CAAC;AAMhC,eAAe,MAAM,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\routes\\attendance.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\attendance.js",
      "name": "attendance.js",
      "extension": ".js",
      "size": 537,
      "created": "2025-10-21T16:55:00.341Z",
      "modified": "2025-10-21T17:02:57.423Z",
      "content": "import express from \"express\";\nimport { markAttendance, bulkAttendance, getUserAttendance } from \"../controllers/attendanceController.js\";\nimport { requireAuth, requireRole } from \"../utils/authMiddleware.js\";\nconst router = express.Router();\nrouter.post(\"/mark\", requireAuth, requireRole([\"teacher\", \"nazim\"]), markAttendance);\nrouter.post(\"/bulk\", requireAuth, requireRole([\"teacher\", \"nazim\"]), bulkAttendance);\nrouter.get(\"/user/:userId\", requireAuth, getUserAttendance);\nexport default router;\n//# sourceMappingURL=attendance.js.map",
      "lines": 9,
      "isText": true
    },
    {
      "path": "src\\routes\\attendance.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\attendance.js.map",
      "name": "attendance.js.map",
      "extension": ".map",
      "size": 594,
      "created": "2025-10-21T16:55:00.340Z",
      "modified": "2025-10-21T17:02:57.422Z",
      "content": "{\"version\":3,\"file\":\"attendance.js\",\"sourceRoot\":\"\",\"sources\":[\"attendance.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,OAAO,MAAM,SAAS,CAAC;AAC9B,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE,iBAAiB,EAAE,MAAM,wCAAwC,CAAC;AAC3G,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,4BAA4B,CAAC;AAEtE,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC,SAAS,EAAC,OAAO,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC;AACpF,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC,SAAS,EAAC,OAAO,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC;AACpF,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,WAAW,EAAE,iBAAiB,CAAC,CAAC;AAE5D,eAAe,MAAM,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\routes\\attendance.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\attendance.ts",
      "name": "attendance.ts",
      "extension": ".ts",
      "size": 511,
      "created": "2025-10-21T11:08:57.899Z",
      "modified": "2025-10-21T11:55:53.704Z",
      "content": "import express from \"express\";\r\nimport { markAttendance, bulkAttendance, getUserAttendance } from \"../controllers/attendanceController.js\";\r\nimport { requireAuth, requireRole } from \"../utils/authMiddleware.js\";\r\n\r\nconst router = express.Router();\r\n\r\nrouter.post(\"/mark\", requireAuth, requireRole([\"teacher\",\"nazim\"]), markAttendance);\r\nrouter.post(\"/bulk\", requireAuth, requireRole([\"teacher\",\"nazim\"]), bulkAttendance);\r\nrouter.get(\"/user/:userId\", requireAuth, getUserAttendance);\r\n\r\nexport default router;\r\n",
      "lines": 12,
      "isText": true
    },
    {
      "path": "src\\routes\\auth.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\auth.d.ts",
      "name": "auth.d.ts",
      "extension": ".ts",
      "size": 123,
      "created": "2025-10-21T16:55:00.238Z",
      "modified": "2025-10-21T17:02:57.342Z",
      "content": "declare const router: import(\"express-serve-static-core\").Router;\nexport default router;\n//# sourceMappingURL=auth.d.ts.map",
      "lines": 3,
      "isText": true
    },
    {
      "path": "src\\routes\\auth.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\auth.d.ts.map",
      "name": "auth.d.ts.map",
      "extension": ".map",
      "size": 147,
      "created": "2025-10-21T16:55:00.235Z",
      "modified": "2025-10-21T17:02:57.339Z",
      "content": "{\"version\":3,\"file\":\"auth.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"auth.ts\"],\"names\":[],\"mappings\":\"AAGA,QAAA,MAAM,MAAM,4CAAmB,CAAC;AAKhC,eAAe,MAAM,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\routes\\auth.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\auth.js",
      "name": "auth.js",
      "extension": ".js",
      "size": 293,
      "created": "2025-10-21T16:55:00.145Z",
      "modified": "2025-10-21T17:02:57.284Z",
      "content": "import express from \"express\";\nimport { registerController, loginController } from \"../controllers/authController.js\";\nconst router = express.Router();\nrouter.post(\"/register\", registerController);\nrouter.post(\"/login\", loginController);\nexport default router;\n//# sourceMappingURL=auth.js.map",
      "lines": 7,
      "isText": true
    },
    {
      "path": "src\\routes\\auth.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\auth.js.map",
      "name": "auth.js.map",
      "extension": ".map",
      "size": 348,
      "created": "2025-10-21T16:55:00.145Z",
      "modified": "2025-10-21T17:02:57.282Z",
      "content": "{\"version\":3,\"file\":\"auth.js\",\"sourceRoot\":\"\",\"sources\":[\"auth.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,OAAO,MAAM,SAAS,CAAC;AAC9B,OAAO,EAAE,kBAAkB,EAAE,eAAe,EAAE,MAAM,kCAAkC,CAAC;AAEvF,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,kBAAkB,CAAC,CAAC;AAC7C,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;AAEvC,eAAe,MAAM,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\routes\\auth.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\auth.ts",
      "name": "auth.ts",
      "extension": ".ts",
      "size": 273,
      "created": "2025-10-21T11:08:35.020Z",
      "modified": "2025-10-21T11:46:52.938Z",
      "content": "import express from \"express\";\r\nimport { registerController, loginController } from \"../controllers/authController.js\";\r\n\r\nconst router = express.Router();\r\n\r\nrouter.post(\"/register\", registerController);\r\nrouter.post(\"/login\", loginController);\r\n\r\nexport default router;\r\n",
      "lines": 10,
      "isText": true
    },
    {
      "path": "src\\routes\\exams.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\exams.d.ts",
      "name": "exams.d.ts",
      "extension": ".ts",
      "size": 124,
      "created": "2025-10-21T16:55:00.421Z",
      "modified": "2025-10-21T17:02:57.484Z",
      "content": "declare const router: import(\"express-serve-static-core\").Router;\nexport default router;\n//# sourceMappingURL=exams.d.ts.map",
      "lines": 3,
      "isText": true
    },
    {
      "path": "src\\routes\\exams.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\exams.d.ts.map",
      "name": "exams.d.ts.map",
      "extension": ".map",
      "size": 149,
      "created": "2025-10-21T16:55:00.418Z",
      "modified": "2025-10-21T17:02:57.484Z",
      "content": "{\"version\":3,\"file\":\"exams.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"exams.ts\"],\"names\":[],\"mappings\":\"AAIA,QAAA,MAAM,MAAM,4CAAmB,CAAC;AAKhC,eAAe,MAAM,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\routes\\exams.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\exams.js",
      "name": "exams.js",
      "extension": ".js",
      "size": 403,
      "created": "2025-10-21T16:55:00.411Z",
      "modified": "2025-10-21T17:02:57.479Z",
      "content": "import express from \"express\";\nimport { createExam, getExamsForClass } from \"../controllers/examController.js\";\nimport { requireAuth, requireRole } from \"../utils/authMiddleware.js\";\nconst router = express.Router();\nrouter.post(\"/\", requireAuth, requireRole([\"nazim\"]), createExam);\nrouter.get(\"/class/:className\", requireAuth, getExamsForClass);\nexport default router;\n//# sourceMappingURL=exams.js.map",
      "lines": 8,
      "isText": true
    },
    {
      "path": "src\\routes\\exams.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\exams.js.map",
      "name": "exams.js.map",
      "extension": ".map",
      "size": 460,
      "created": "2025-10-21T16:55:00.411Z",
      "modified": "2025-10-21T17:02:57.477Z",
      "content": "{\"version\":3,\"file\":\"exams.js\",\"sourceRoot\":\"\",\"sources\":[\"exams.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,OAAO,MAAM,SAAS,CAAC;AAC9B,OAAO,EAAE,UAAU,EAAE,gBAAgB,EAAE,MAAM,kCAAkC,CAAC;AAChF,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,4BAA4B,CAAC;AAEtE,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;AAClE,MAAM,CAAC,GAAG,CAAC,mBAAmB,EAAE,WAAW,EAAE,gBAAgB,CAAC,CAAC;AAE/D,eAAe,MAAM,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\routes\\exams.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\exams.ts",
      "name": "exams.ts",
      "extension": ".ts",
      "size": 383,
      "created": "2025-10-21T11:09:31.378Z",
      "modified": "2025-10-21T11:58:00.078Z",
      "content": "import express from \"express\";\r\nimport { createExam, getExamsForClass } from \"../controllers/examController.js\";\r\nimport { requireAuth, requireRole } from \"../utils/authMiddleware.js\";\r\n\r\nconst router = express.Router();\r\n\r\nrouter.post(\"/\", requireAuth, requireRole([\"nazim\"]), createExam);\r\nrouter.get(\"/class/:className\", requireAuth, getExamsForClass);\r\n\r\nexport default router;\r\n",
      "lines": 11,
      "isText": true
    },
    {
      "path": "src\\routes\\tasks.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\tasks.d.ts",
      "name": "tasks.d.ts",
      "extension": ".ts",
      "size": 124,
      "created": "2025-10-21T16:55:00.381Z",
      "modified": "2025-10-21T17:02:57.454Z",
      "content": "declare const router: import(\"express-serve-static-core\").Router;\nexport default router;\n//# sourceMappingURL=tasks.d.ts.map",
      "lines": 3,
      "isText": true
    },
    {
      "path": "src\\routes\\tasks.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\tasks.d.ts.map",
      "name": "tasks.d.ts.map",
      "extension": ".map",
      "size": 149,
      "created": "2025-10-21T16:55:00.381Z",
      "modified": "2025-10-21T17:02:57.454Z",
      "content": "{\"version\":3,\"file\":\"tasks.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"tasks.ts\"],\"names\":[],\"mappings\":\"AAIA,QAAA,MAAM,MAAM,4CAAmB,CAAC;AAMhC,eAAe,MAAM,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\routes\\tasks.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\tasks.js",
      "name": "tasks.js",
      "extension": ".js",
      "size": 477,
      "created": "2025-10-21T16:55:00.375Z",
      "modified": "2025-10-21T17:02:57.448Z",
      "content": "import express from \"express\";\nimport { createTask, getTasksForUser, updateTaskStatus } from \"../controllers/taskController.js\";\nimport { requireAuth, requireRole } from \"../utils/authMiddleware.js\";\nconst router = express.Router();\nrouter.post(\"/\", requireAuth, requireRole([\"teacher\"]), createTask);\nrouter.get(\"/user/:userId\", requireAuth, getTasksForUser);\nrouter.patch(\"/:id/status\", requireAuth, updateTaskStatus);\nexport default router;\n//# sourceMappingURL=tasks.js.map",
      "lines": 9,
      "isText": true
    },
    {
      "path": "src\\routes\\tasks.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\tasks.js.map",
      "name": "tasks.js.map",
      "extension": ".map",
      "size": 529,
      "created": "2025-10-21T16:55:00.375Z",
      "modified": "2025-10-21T17:02:57.448Z",
      "content": "{\"version\":3,\"file\":\"tasks.js\",\"sourceRoot\":\"\",\"sources\":[\"tasks.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,OAAO,MAAM,SAAS,CAAC;AAC9B,OAAO,EAAE,UAAU,EAAE,eAAe,EAAE,gBAAgB,EAAE,MAAM,kCAAkC,CAAC;AACjG,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,4BAA4B,CAAC;AAEtE,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;AACpE,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC;AAC1D,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,WAAW,EAAE,gBAAgB,CAAC,CAAC;AAE3D,eAAe,MAAM,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\routes\\tasks.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\tasks.ts",
      "name": "tasks.ts",
      "extension": ".ts",
      "size": 458,
      "created": "2025-10-21T11:09:22.494Z",
      "modified": "2025-10-21T11:56:53.431Z",
      "content": "import express from \"express\";\r\nimport { createTask, getTasksForUser, updateTaskStatus } from \"../controllers/taskController.js\";\r\nimport { requireAuth, requireRole } from \"../utils/authMiddleware.js\";\r\n\r\nconst router = express.Router();\r\n\r\nrouter.post(\"/\", requireAuth, requireRole([\"teacher\"]), createTask);\r\nrouter.get(\"/user/:userId\", requireAuth, getTasksForUser);\r\nrouter.patch(\"/:id/status\", requireAuth, updateTaskStatus);\r\n\r\nexport default router;\r\n",
      "lines": 12,
      "isText": true
    },
    {
      "path": "src\\routes\\users.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\users.d.ts",
      "name": "users.d.ts",
      "extension": ".ts",
      "size": 124,
      "created": "2025-10-21T16:55:00.283Z",
      "modified": "2025-10-21T17:02:57.379Z",
      "content": "declare const router: import(\"express-serve-static-core\").Router;\nexport default router;\n//# sourceMappingURL=users.d.ts.map",
      "lines": 3,
      "isText": true
    },
    {
      "path": "src\\routes\\users.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\users.d.ts.map",
      "name": "users.d.ts.map",
      "extension": ".map",
      "size": 149,
      "created": "2025-10-21T16:55:00.283Z",
      "modified": "2025-10-21T17:02:57.379Z",
      "content": "{\"version\":3,\"file\":\"users.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"users.ts\"],\"names\":[],\"mappings\":\"AAIA,QAAA,MAAM,MAAM,4CAAmB,CAAC;AAOhC,eAAe,MAAM,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\routes\\users.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\users.js",
      "name": "users.js",
      "extension": ".js",
      "size": 531,
      "created": "2025-10-21T16:55:00.276Z",
      "modified": "2025-10-21T17:02:57.375Z",
      "content": "import express from \"express\";\nimport { listUsers, createUser, getUser, updateUser } from \"../controllers/userController.js\";\nimport { requireAuth, requireRole } from \"../utils/authMiddleware.js\";\nconst router = express.Router();\nrouter.get(\"/\", requireAuth, requireRole([\"nazim\"]), listUsers);\nrouter.post(\"/\", requireAuth, requireRole([\"nazim\"]), createUser);\nrouter.get(\"/:id\", requireAuth, getUser);\nrouter.patch(\"/:id\", requireAuth, requireRole([\"nazim\"]), updateUser);\nexport default router;\n//# sourceMappingURL=users.js.map",
      "lines": 10,
      "isText": true
    },
    {
      "path": "src\\routes\\users.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\users.js.map",
      "name": "users.js.map",
      "extension": ".map",
      "size": 666,
      "created": "2025-10-21T16:55:00.276Z",
      "modified": "2025-10-21T17:02:57.373Z",
      "content": "{\"version\":3,\"file\":\"users.js\",\"sourceRoot\":\"\",\"sources\":[\"users.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,OAAO,MAAM,SAAS,CAAC;AAC9B,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,kCAAkC,CAAC;AAC9F,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,4BAA4B,CAAC;AAEtE,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;AAChE,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;AAClE,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;AACzC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;AAEtE,eAAe,MAAM,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\routes\\users.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes\\users.ts",
      "name": "users.ts",
      "extension": ".ts",
      "size": 513,
      "created": "2025-10-21T11:08:42.572Z",
      "modified": "2025-10-21T11:47:30.561Z",
      "content": "import express from \"express\";\r\nimport { listUsers, createUser, getUser, updateUser } from \"../controllers/userController.js\";\r\nimport { requireAuth, requireRole } from \"../utils/authMiddleware.js\";\r\n\r\nconst router = express.Router();\r\n\r\nrouter.get(\"/\", requireAuth, requireRole([\"nazim\"]), listUsers);\r\nrouter.post(\"/\", requireAuth, requireRole([\"nazim\"]), createUser);\r\nrouter.get(\"/:id\", requireAuth, getUser);\r\nrouter.patch(\"/:id\", requireAuth, requireRole([\"nazim\"]), updateUser);\r\n\r\nexport default router;\r\n",
      "lines": 13,
      "isText": true
    },
    {
      "path": "src\\seed\\fullSeed.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\seed\\fullSeed.d.ts",
      "name": "fullSeed.d.ts",
      "extension": ".ts",
      "size": 49,
      "created": "2025-10-21T16:55:00.472Z",
      "modified": "2025-10-21T17:02:57.530Z",
      "content": "export {};\n//# sourceMappingURL=fullSeed.d.ts.map",
      "lines": 2,
      "isText": true
    },
    {
      "path": "src\\seed\\fullSeed.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\seed\\fullSeed.d.ts.map",
      "name": "fullSeed.d.ts.map",
      "extension": ".map",
      "size": 103,
      "created": "2025-10-21T16:55:00.472Z",
      "modified": "2025-10-21T17:02:57.530Z",
      "content": "{\"version\":3,\"file\":\"fullSeed.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"fullSeed.ts\"],\"names\":[],\"mappings\":\"\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\seed\\fullSeed.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\seed\\fullSeed.js",
      "name": "fullSeed.js",
      "extension": ".js",
      "size": 7822,
      "created": "2025-10-21T16:55:00.466Z",
      "modified": "2025-10-21T17:02:57.528Z",
      "content": "// src/seed/fullSeed.ts\nimport dotenv from \"dotenv\";\ndotenv.config();\nimport connectToDatabase from \"../config/db/db.js\";\nimport { ClassModel } from \"../models/Class.js\";\nimport { UserModel } from \"../models/User.js\";\nimport { AttendanceModel } from \"../models/Attendance.js\";\nimport { TaskModel } from \"../models/Task.js\";\nimport { ExamModel } from \"../models/Exam.js\";\nimport { hashPassword } from \"../utils/hash.js\";\nasync function ensureClasses() {\n    const classes = [\n        \"عامہ سال اول\", \"عامہ سال دوم\", \"خاصہ سال اول\", \"خاصہ سال دوم\",\n        \"عالیہ سال اول\", \"عالیہ سال دوم\", \"عالمیہ سال اول\", \"عالمیہ سال دوم\"\n    ];\n    for (const name of classes) {\n        await ClassModel.updateOne({ name }, { name }, { upsert: true });\n    }\n    console.log(\"Classes ensured.\");\n}\nasync function createUsers() {\n    // sample users with plain passwords (for testing)\n    const creds = [\n        { email: \"nazim@jamia.local\", name: \"Nazim Admin\", role: \"nazim\", password: \"NazimPass123!\" },\n        { email: \"teacher1@jamia.local\", name: \"Ustad Ahmed\", role: \"teacher\", password: \"TeachPass1!\", subjects: [\"قرآن\", \"فقہ\"] },\n        { email: \"teacher2@jamia.local\", name: \"Ustad Bilal\", role: \"teacher\", password: \"TeachPass2!\", subjects: [\"حدیث\", \"تفسیر\"] },\n        { email: \"student1@jamia.local\", name: \"Student One\", role: \"student\", password: \"StudPass1!\", className: \"عامہ سال اول\" },\n        { email: \"student2@jamia.local\", name: \"Student Two\", role: \"student\", password: \"StudPass2!\", className: \"عامہ سال اول\" },\n        { email: \"student3@jamia.local\", name: \"Student Three\", role: \"student\", password: \"StudPass3!\", className: \"عامہ سال اول\" },\n        { email: \"student4@jamia.local\", name: \"Student Four\", role: \"student\", password: \"StudPass4!\", className: \"عامہ سال اول\" },\n        { email: \"student5@jamia.local\", name: \"Student Five\", role: \"student\", password: \"StudPass5!\", className: \"عامہ سال دوم\" },\n        { email: \"student6@jamia.local\", name: \"Student Six\", role: \"student\", password: \"StudPass6!\", className: \"عامہ سال دوم\" }\n    ];\n    // Remove existing with same emails so script is idempotent\n    const emails = creds.map(c => c.email);\n    await UserModel.deleteMany({ email: { $in: emails } });\n    const created = [];\n    for (const c of creds) {\n        const passwordHash = await hashPassword(c.password);\n        const u = await UserModel.create({\n            email: c.email,\n            passwordHash,\n            name: c.name,\n            role: c.role,\n            className: c.className,\n            subjects: c.subjects || []\n        });\n        created.push({ email: c.email, id: u._id, password: c.password, role: c.role });\n    }\n    console.log(\"Users created:\");\n    created.forEach(u => console.log(`  ${u.role.toUpperCase()}: ${u.email} / ${u.password}`));\n    return created;\n}\nfunction isoDateString(d) {\n    // returns YYYY-MM-DD\n    return d.toISOString().slice(0, 10);\n}\nasync function createAttendance(users) {\n    // pick students and teachers\n    const students = users.filter(u => u.role === \"student\");\n    const teachers = users.filter(u => u.role === \"teacher\");\n    const nazim = users.find(u => u.role === \"nazim\");\n    // remove existing attendance for the dates we will create to keep idempotent\n    const days = [];\n    const today = new Date();\n    for (let i = 0; i < 5; i++) {\n        const d = new Date(today);\n        d.setDate(today.getDate() - i);\n        days.push(isoDateString(d));\n    }\n    await AttendanceModel.deleteMany({ date: { $in: days } });\n    const docs = [];\n    for (const date of days) {\n        // for each student: randomly present or absent for variety\n        for (const s of students) {\n            const status = Math.random() > 0.15 ? \"present\" : \"absent\"; // mostly present\n            docs.push({\n                user: s.id,\n                userRole: \"student\",\n                className: s.className,\n                date,\n                entryTime: status === \"present\" ? \"08:00\" : undefined,\n                exitTime: status === \"present\" ? \"10:00\" : undefined,\n                status,\n                markedBy: teachers[Math.floor(Math.random() * teachers.length)].id\n            });\n        }\n        // teachers themselves (present)\n        for (const t of teachers) {\n            docs.push({\n                user: t.id,\n                userRole: \"teacher\",\n                date,\n                entryTime: \"07:45\",\n                exitTime: \"10:15\",\n                status: \"present\",\n                subject: t.subjects && t.subjects[0],\n                markedBy: nazim.id\n            });\n        }\n    }\n    const inserted = await AttendanceModel.insertMany(docs);\n    console.log(`Inserted ${inserted.length} attendance records for last ${days.length} days.`);\n    return inserted.length;\n}\nasync function createTasks(users) {\n    const students = users.filter(u => u.role === \"student\").slice(0, 4); // first 4 students\n    const teacher = await UserModel.findOne({ email: \"teacher1@jamia.local\" });\n    if (!teacher) {\n        console.warn(\"teacher1 not found for task creation\");\n        return;\n    }\n    // remove existing tasks by same title to keep idempotent\n    await TaskModel.deleteMany({ title: { $in: [\"حفظ سورہ بقرہ\", \"قراءة صف اولی\"] } });\n    const t1 = await TaskModel.create({\n        title: \"حفظ سورہ بقرہ\",\n        description: \"سورہ بقرہ کے چند آیات حفظ کریں\",\n        subject: \"قرآن\",\n        assignedBy: teacher._id,\n        assignedTo: students.map(s => s.id),\n        assignedDate: isoDateString(new Date()),\n        dueDate: isoDateString(new Date(new Date().setDate(new Date().getDate() + 7))),\n        status: \"pending\"\n    });\n    const t2 = await TaskModel.create({\n        title: \"قراءة صف اولی\",\n        description: \"صفحہ نمبر 12 سے 15 پڑھ کر خلاصہ دیں\",\n        subject: \"فقہ\",\n        assignedBy: teacher._id,\n        assignedTo: [students[0].id],\n        assignedDate: isoDateString(new Date()),\n        dueDate: isoDateString(new Date(new Date().setDate(new Date().getDate() + 3))),\n        status: \"pending\"\n    });\n    console.log(\"Tasks created:\", t1.title, \",\", t2.title);\n}\nasync function createExam(users) {\n    const nazim = await UserModel.findOne({ email: \"nazim@jamia.local\" });\n    if (!nazim) {\n        console.warn(\"nazim not found for exam creation\");\n        return;\n    }\n    await ExamModel.deleteMany({ title: \"Midterm - عامہ سال اول\" });\n    const exam = await ExamModel.create({\n        title: \"Midterm - عامہ سال اول\",\n        subject: \"قرآن\",\n        className: \"عامہ سال اول\",\n        date: isoDateString(new Date(new Date().setDate(new Date().getDate() + 10))),\n        startTime: \"09:00\",\n        endTime: \"11:00\",\n        createdBy: nazim._id,\n        results: []\n    });\n    console.log(\"Exam created:\", exam.title);\n}\nasync function run() {\n    await connectToDatabase();\n    await ensureClasses();\n    const createdUsers = await createUsers();\n    await createAttendance(createdUsers);\n    await createTasks(createdUsers);\n    await createExam(createdUsers);\n    console.log(\"Full seed complete. You can now login with the created accounts.\");\n    console.log(\"Example logins:\");\n    console.log(\"  nazim@jamia.local / NazimPass123!\");\n    console.log(\"  teacher1@jamia.local / TeachPass1!\");\n    console.log(\"  teacher2@jamia.local / TeachPass2!\");\n    console.log(\"  student1@jamia.local / StudPass1!\");\n    process.exit(0);\n}\nrun().catch(err => {\n    console.error(\"Seed failed:\", err);\n    process.exit(1);\n});\n//# sourceMappingURL=fullSeed.js.map",
      "lines": 175,
      "isText": true
    },
    {
      "path": "src\\seed\\fullSeed.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\seed\\fullSeed.js.map",
      "name": "fullSeed.js.map",
      "extension": ".map",
      "size": 7712,
      "created": "2025-10-21T16:55:00.466Z",
      "modified": "2025-10-21T17:02:57.527Z",
      "content": "{\"version\":3,\"file\":\"fullSeed.js\",\"sourceRoot\":\"\",\"sources\":[\"fullSeed.ts\"],\"names\":[],\"mappings\":\"AAAA,uBAAuB;AACvB,OAAO,MAAM,MAAM,QAAQ,CAAC;AAC5B,MAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,OAAO,iBAAiB,MAAM,oBAAoB,CAAC;AACnD,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAChD,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAC9C,OAAO,EAAE,eAAe,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAC9C,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAC9C,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAEhD,KAAK,UAAU,aAAa;IAC1B,MAAM,OAAO,GAAG;QACd,cAAc,EAAC,cAAc,EAAC,cAAc,EAAC,cAAc;QAC3D,eAAe,EAAC,eAAe,EAAC,gBAAgB,EAAC,gBAAgB;KAClE,CAAC;IACF,KAAK,MAAM,IAAI,IAAI,OAAO,EAAE,CAAC;QAC3B,MAAM,UAAU,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IACnE,CAAC;IACD,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;AAClC,CAAC;AAED,KAAK,UAAU,WAAW;IACxB,kDAAkD;IAClD,MAAM,KAAK,GAAG;QACZ,EAAE,KAAK,EAAE,mBAAmB,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE;QAC7F,EAAE,KAAK,EAAE,sBAAsB,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,aAAa,EAAE,QAAQ,EAAE,CAAC,MAAM,EAAC,KAAK,CAAC,EAAE;QAC1H,EAAE,KAAK,EAAE,sBAAsB,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,aAAa,EAAE,QAAQ,EAAE,CAAC,MAAM,EAAC,OAAO,CAAC,EAAE;QAC5H,EAAE,KAAK,EAAE,sBAAsB,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,SAAS,EAAE,cAAc,EAAE;QAC1H,EAAE,KAAK,EAAE,sBAAsB,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,SAAS,EAAE,cAAc,EAAE;QAC1H,EAAE,KAAK,EAAE,sBAAsB,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,SAAS,EAAE,cAAc,EAAE;QAC5H,EAAE,KAAK,EAAE,sBAAsB,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,SAAS,EAAE,cAAc,EAAE;QAC3H,EAAE,KAAK,EAAE,sBAAsB,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,SAAS,EAAE,cAAc,EAAE;QAC3H,EAAE,KAAK,EAAE,sBAAsB,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,SAAS,EAAE,cAAc,EAAE;KAC3H,CAAC;IAEF,2DAA2D;IAC3D,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACvC,MAAM,SAAS,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;IAEvD,MAAM,OAAO,GAAU,EAAE,CAAC;IAC1B,KAAK,MAAM,CAAC,IAAI,KAAK,EAAE,CAAC;QACtB,MAAM,YAAY,GAAG,MAAM,YAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QACpD,MAAM,CAAC,GAAG,MAAM,SAAS,CAAC,MAAM,CAAC;YAC/B,KAAK,EAAE,CAAC,CAAC,KAAK;YACd,YAAY;YACZ,IAAI,EAAE,CAAC,CAAC,IAAI;YACZ,IAAI,EAAE,CAAC,CAAC,IAAI;YACZ,SAAS,EAAE,CAAC,CAAC,SAAS;YACtB,QAAQ,EAAE,CAAC,CAAC,QAAQ,IAAI,EAAE;SAC3B,CAAC,CAAC;QACH,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;IAClF,CAAC;IAED,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAC9B,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC3F,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,SAAS,aAAa,CAAC,CAAO;IAC5B,qBAAqB;IACrB,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACtC,CAAC;AAED,KAAK,UAAU,gBAAgB,CAAC,KAAY;IAC1C,6BAA6B;IAC7B,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC;IACzD,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC;IACzD,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC;IAElD,6EAA6E;IAC7E,MAAM,IAAI,GAAG,EAAE,CAAC;IAChB,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;IACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;QAC3B,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC;IAED,MAAM,eAAe,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IAE1D,MAAM,IAAI,GAAU,EAAE,CAAC;IAEvB,KAAK,MAAM,IAAI,IAAI,IAAI,EAAE,CAAC;QACxB,2DAA2D;QAC3D,KAAK,MAAM,CAAC,IAAI,QAAQ,EAAE,CAAC;YACzB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,iBAAiB;YAC7E,IAAI,CAAC,IAAI,CAAC;gBACR,IAAI,EAAE,CAAC,CAAC,EAAE;gBACV,QAAQ,EAAE,SAAS;gBACnB,SAAS,EAAE,CAAC,CAAC,SAAS;gBACtB,IAAI;gBACJ,SAAS,EAAE,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS;gBACrD,QAAQ,EAAE,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS;gBACpD,MAAM;gBACN,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;aACnE,CAAC,CAAC;QACL,CAAC;QAED,gCAAgC;QAChC,KAAK,MAAM,CAAC,IAAI,QAAQ,EAAE,CAAC;YACzB,IAAI,CAAC,IAAI,CAAC;gBACR,IAAI,EAAE,CAAC,CAAC,EAAE;gBACV,QAAQ,EAAE,SAAS;gBACnB,IAAI;gBACJ,SAAS,EAAE,OAAO;gBAClB,QAAQ,EAAE,OAAO;gBACjB,MAAM,EAAE,SAAS;gBACjB,OAAO,EAAE,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACpC,QAAQ,EAAE,KAAK,CAAC,EAAE;aACnB,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,MAAM,QAAQ,GAAG,MAAM,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACxD,OAAO,CAAC,GAAG,CAAC,YAAY,QAAQ,CAAC,MAAM,gCAAgC,IAAI,CAAC,MAAM,QAAQ,CAAC,CAAC;IAC5F,OAAO,QAAQ,CAAC,MAAM,CAAC;AACzB,CAAC;AAED,KAAK,UAAU,WAAW,CAAC,KAAY;IACrC,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,mBAAmB;IACzF,MAAM,OAAO,GAAG,MAAM,SAAS,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC,CAAC;IAC3E,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,OAAO,CAAC,IAAI,CAAC,sCAAsC,CAAC,CAAC;QACrD,OAAO;IACT,CAAC;IAED,yDAAyD;IACzD,MAAM,SAAS,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,CAAC,eAAe,EAAE,eAAe,CAAC,EAAE,EAAE,CAAC,CAAC;IAEnF,MAAM,EAAE,GAAG,MAAM,SAAS,CAAC,MAAM,CAAC;QAChC,KAAK,EAAE,eAAe;QACtB,WAAW,EAAE,gCAAgC;QAC7C,OAAO,EAAE,MAAM;QACf,UAAU,EAAE,OAAO,CAAC,GAAG;QACvB,UAAU,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QACnC,YAAY,EAAE,aAAa,CAAC,IAAI,IAAI,EAAE,CAAC;QACvC,OAAO,EAAE,aAAa,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;QAC9E,MAAM,EAAE,SAAS;KAClB,CAAC,CAAC;IAEH,MAAM,EAAE,GAAG,MAAM,SAAS,CAAC,MAAM,CAAC;QAChC,KAAK,EAAE,eAAe;QACtB,WAAW,EAAE,qCAAqC;QAClD,OAAO,EAAE,KAAK;QACd,UAAU,EAAE,OAAO,CAAC,GAAG;QACvB,UAAU,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5B,YAAY,EAAE,aAAa,CAAC,IAAI,IAAI,EAAE,CAAC;QACvC,OAAO,EAAE,aAAa,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;QAC9E,MAAM,EAAE,SAAS;KAClB,CAAC,CAAC;IAEH,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;AACzD,CAAC;AAED,KAAK,UAAU,UAAU,CAAC,KAAY;IACpC,MAAM,KAAK,GAAG,MAAM,SAAS,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC,CAAC;IACtE,IAAI,CAAC,KAAK,EAAE,CAAC;QACX,OAAO,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;QAClD,OAAO;IACT,CAAC;IAED,MAAM,SAAS,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,wBAAwB,EAAE,CAAC,CAAC;IAEhE,MAAM,IAAI,GAAG,MAAM,SAAS,CAAC,MAAM,CAAC;QAClC,KAAK,EAAE,wBAAwB;QAC/B,OAAO,EAAE,MAAM;QACf,SAAS,EAAE,cAAc;QACzB,IAAI,EAAE,aAAa,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAC5E,SAAS,EAAE,OAAO;QAClB,OAAO,EAAE,OAAO;QAChB,SAAS,EAAE,KAAK,CAAC,GAAG;QACpB,OAAO,EAAE,EAAE;KACZ,CAAC,CAAC;IAEH,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AAC3C,CAAC;AAED,KAAK,UAAU,GAAG;IAChB,MAAM,iBAAiB,EAAE,CAAC;IAC1B,MAAM,aAAa,EAAE,CAAC;IACtB,MAAM,YAAY,GAAG,MAAM,WAAW,EAAE,CAAC;IACzC,MAAM,gBAAgB,CAAC,YAAY,CAAC,CAAC;IACrC,MAAM,WAAW,CAAC,YAAY,CAAC,CAAC;IAChC,MAAM,UAAU,CAAC,YAAY,CAAC,CAAC;IAC/B,OAAO,CAAC,GAAG,CAAC,kEAAkE,CAAC,CAAC;IAChF,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IAC/B,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;IACnD,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;IACpD,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;IACpD,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;IACnD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC;AAED,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;IAChB,OAAO,CAAC,KAAK,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;IACnC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\seed\\fullSeed.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\seed\\fullSeed.ts",
      "name": "fullSeed.ts",
      "extension": ".ts",
      "size": 7501,
      "created": "2025-10-21T12:38:16.343Z",
      "modified": "2025-10-21T12:56:57.735Z",
      "content": "// src/seed/fullSeed.ts\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nimport connectToDatabase from \"../config/db/db.js\";\r\nimport { ClassModel } from \"../models/Class.js\";\r\nimport { UserModel } from \"../models/User.js\";\r\nimport { AttendanceModel } from \"../models/Attendance.js\";\r\nimport { TaskModel } from \"../models/Task.js\";\r\nimport { ExamModel } from \"../models/Exam.js\";\r\nimport { hashPassword } from \"../utils/hash.js\";\r\n\r\nasync function ensureClasses() {\r\n  const classes = [\r\n    \"عامہ سال اول\",\"عامہ سال دوم\",\"خاصہ سال اول\",\"خاصہ سال دوم\",\r\n    \"عالیہ سال اول\",\"عالیہ سال دوم\",\"عالمیہ سال اول\",\"عالمیہ سال دوم\"\r\n  ];\r\n  for (const name of classes) {\r\n    await ClassModel.updateOne({ name }, { name }, { upsert: true });\r\n  }\r\n  console.log(\"Classes ensured.\");\r\n}\r\n\r\nasync function createUsers() {\r\n  // sample users with plain passwords (for testing)\r\n  const creds = [\r\n    { email: \"nazim@jamia.local\", name: \"Nazim Admin\", role: \"nazim\", password: \"NazimPass123!\" },\r\n    { email: \"teacher1@jamia.local\", name: \"Ustad Ahmed\", role: \"teacher\", password: \"TeachPass1!\", subjects: [\"قرآن\",\"فقہ\"] },\r\n    { email: \"teacher2@jamia.local\", name: \"Ustad Bilal\", role: \"teacher\", password: \"TeachPass2!\", subjects: [\"حدیث\",\"تفسیر\"] },\r\n    { email: \"student1@jamia.local\", name: \"Student One\", role: \"student\", password: \"StudPass1!\", className: \"عامہ سال اول\" },\r\n    { email: \"student2@jamia.local\", name: \"Student Two\", role: \"student\", password: \"StudPass2!\", className: \"عامہ سال اول\" },\r\n    { email: \"student3@jamia.local\", name: \"Student Three\", role: \"student\", password: \"StudPass3!\", className: \"عامہ سال اول\" },\r\n    { email: \"student4@jamia.local\", name: \"Student Four\", role: \"student\", password: \"StudPass4!\", className: \"عامہ سال اول\" },\r\n    { email: \"student5@jamia.local\", name: \"Student Five\", role: \"student\", password: \"StudPass5!\", className: \"عامہ سال دوم\" },\r\n    { email: \"student6@jamia.local\", name: \"Student Six\", role: \"student\", password: \"StudPass6!\", className: \"عامہ سال دوم\" }\r\n  ];\r\n\r\n  // Remove existing with same emails so script is idempotent\r\n  const emails = creds.map(c => c.email);\r\n  await UserModel.deleteMany({ email: { $in: emails } });\r\n\r\n  const created: any[] = [];\r\n  for (const c of creds) {\r\n    const passwordHash = await hashPassword(c.password);\r\n    const u = await UserModel.create({\r\n      email: c.email,\r\n      passwordHash,\r\n      name: c.name,\r\n      role: c.role,\r\n      className: c.className,\r\n      subjects: c.subjects || []\r\n    });\r\n    created.push({ email: c.email, id: u._id, password: c.password, role: c.role });\r\n  }\r\n\r\n  console.log(\"Users created:\");\r\n  created.forEach(u => console.log(`  ${u.role.toUpperCase()}: ${u.email} / ${u.password}`));\r\n  return created;\r\n}\r\n\r\nfunction isoDateString(d: Date) {\r\n  // returns YYYY-MM-DD\r\n  return d.toISOString().slice(0, 10);\r\n}\r\n\r\nasync function createAttendance(users: any[]) {\r\n  // pick students and teachers\r\n  const students = users.filter(u => u.role === \"student\");\r\n  const teachers = users.filter(u => u.role === \"teacher\");\r\n  const nazim = users.find(u => u.role === \"nazim\");\r\n\r\n  // remove existing attendance for the dates we will create to keep idempotent\r\n  const days = [];\r\n  const today = new Date();\r\n  for (let i = 0; i < 5; i++) {\r\n    const d = new Date(today);\r\n    d.setDate(today.getDate() - i);\r\n    days.push(isoDateString(d));\r\n  }\r\n\r\n  await AttendanceModel.deleteMany({ date: { $in: days } });\r\n\r\n  const docs: any[] = [];\r\n\r\n  for (const date of days) {\r\n    // for each student: randomly present or absent for variety\r\n    for (const s of students) {\r\n      const status = Math.random() > 0.15 ? \"present\" : \"absent\"; // mostly present\r\n      docs.push({\r\n        user: s.id,\r\n        userRole: \"student\",\r\n        className: s.className,\r\n        date,\r\n        entryTime: status === \"present\" ? \"08:00\" : undefined,\r\n        exitTime: status === \"present\" ? \"10:00\" : undefined,\r\n        status,\r\n        markedBy: teachers[Math.floor(Math.random() * teachers.length)].id\r\n      });\r\n    }\r\n\r\n    // teachers themselves (present)\r\n    for (const t of teachers) {\r\n      docs.push({\r\n        user: t.id,\r\n        userRole: \"teacher\",\r\n        date,\r\n        entryTime: \"07:45\",\r\n        exitTime: \"10:15\",\r\n        status: \"present\",\r\n        subject: t.subjects && t.subjects[0],\r\n        markedBy: nazim.id\r\n      });\r\n    }\r\n  }\r\n\r\n  const inserted = await AttendanceModel.insertMany(docs);\r\n  console.log(`Inserted ${inserted.length} attendance records for last ${days.length} days.`);\r\n  return inserted.length;\r\n}\r\n\r\nasync function createTasks(users: any[]) {\r\n  const students = users.filter(u => u.role === \"student\").slice(0, 4); // first 4 students\r\n  const teacher = await UserModel.findOne({ email: \"teacher1@jamia.local\" });\r\n  if (!teacher) {\r\n    console.warn(\"teacher1 not found for task creation\");\r\n    return;\r\n  }\r\n\r\n  // remove existing tasks by same title to keep idempotent\r\n  await TaskModel.deleteMany({ title: { $in: [\"حفظ سورہ بقرہ\", \"قراءة صف اولی\"] } });\r\n\r\n  const t1 = await TaskModel.create({\r\n    title: \"حفظ سورہ بقرہ\",\r\n    description: \"سورہ بقرہ کے چند آیات حفظ کریں\",\r\n    subject: \"قرآن\",\r\n    assignedBy: teacher._id,\r\n    assignedTo: students.map(s => s.id),\r\n    assignedDate: isoDateString(new Date()),\r\n    dueDate: isoDateString(new Date(new Date().setDate(new Date().getDate() + 7))),\r\n    status: \"pending\"\r\n  });\r\n\r\n  const t2 = await TaskModel.create({\r\n    title: \"قراءة صف اولی\",\r\n    description: \"صفحہ نمبر 12 سے 15 پڑھ کر خلاصہ دیں\",\r\n    subject: \"فقہ\",\r\n    assignedBy: teacher._id,\r\n    assignedTo: [students[0].id],\r\n    assignedDate: isoDateString(new Date()),\r\n    dueDate: isoDateString(new Date(new Date().setDate(new Date().getDate() + 3))),\r\n    status: \"pending\"\r\n  });\r\n\r\n  console.log(\"Tasks created:\", t1.title, \",\", t2.title);\r\n}\r\n\r\nasync function createExam(users: any[]) {\r\n  const nazim = await UserModel.findOne({ email: \"nazim@jamia.local\" });\r\n  if (!nazim) {\r\n    console.warn(\"nazim not found for exam creation\");\r\n    return;\r\n  }\r\n\r\n  await ExamModel.deleteMany({ title: \"Midterm - عامہ سال اول\" });\r\n\r\n  const exam = await ExamModel.create({\r\n    title: \"Midterm - عامہ سال اول\",\r\n    subject: \"قرآن\",\r\n    className: \"عامہ سال اول\",\r\n    date: isoDateString(new Date(new Date().setDate(new Date().getDate() + 10))),\r\n    startTime: \"09:00\",\r\n    endTime: \"11:00\",\r\n    createdBy: nazim._id,\r\n    results: []\r\n  });\r\n\r\n  console.log(\"Exam created:\", exam.title);\r\n}\r\n\r\nasync function run() {\r\n  await connectToDatabase();\r\n  await ensureClasses();\r\n  const createdUsers = await createUsers();\r\n  await createAttendance(createdUsers);\r\n  await createTasks(createdUsers);\r\n  await createExam(createdUsers);\r\n  console.log(\"Full seed complete. You can now login with the created accounts.\");\r\n  console.log(\"Example logins:\");\r\n  console.log(\"  nazim@jamia.local / NazimPass123!\");\r\n  console.log(\"  teacher1@jamia.local / TeachPass1!\");\r\n  console.log(\"  teacher2@jamia.local / TeachPass2!\");\r\n  console.log(\"  student1@jamia.local / StudPass1!\");\r\n  process.exit(0);\r\n}\r\n\r\nrun().catch(err => {\r\n  console.error(\"Seed failed:\", err);\r\n  process.exit(1);\r\n});\r\n",
      "lines": 200,
      "isText": true
    },
    {
      "path": "src\\seed\\seed.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\seed\\seed.d.ts",
      "name": "seed.d.ts",
      "extension": ".ts",
      "size": 45,
      "created": "2025-10-21T16:55:00.481Z",
      "modified": "2025-10-21T17:02:57.537Z",
      "content": "export {};\n//# sourceMappingURL=seed.d.ts.map",
      "lines": 2,
      "isText": true
    },
    {
      "path": "src\\seed\\seed.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\seed\\seed.d.ts.map",
      "name": "seed.d.ts.map",
      "extension": ".map",
      "size": 95,
      "created": "2025-10-21T16:55:00.479Z",
      "modified": "2025-10-21T17:02:57.536Z",
      "content": "{\"version\":3,\"file\":\"seed.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"seed.ts\"],\"names\":[],\"mappings\":\"\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\seed\\seed.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\seed\\seed.js",
      "name": "seed.js",
      "extension": ".js",
      "size": 767,
      "created": "2025-10-21T16:55:00.475Z",
      "modified": "2025-10-21T17:02:57.534Z",
      "content": "import dotenv from \"dotenv\";\ndotenv.config();\nimport { ClassModel } from \"../models/Class.js\";\nimport connectToDatabase from \"../config/db/db.js\";\nconst classes = [\n    \"عامہ سال اول\", \"عامہ سال دوم\", \"خاصہ سال اول\", \"خاصہ سال دوم\",\n    \"عالیہ سال اول\", \"عالیہ سال دوم\", \"عالمیہ سال اول\", \"عالمیہ سال دوم\"\n];\nasync function run() {\n    await connectToDatabase();\n    for (const name of classes) {\n        await ClassModel.updateOne({ name }, { name }, { upsert: true });\n        console.log(\"ensured class:\", name);\n    }\n    console.log(\"Seed complete\");\n    process.exit(0);\n}\nrun().catch(err => {\n    console.error(err);\n    process.exit(1);\n});\n//# sourceMappingURL=seed.js.map",
      "lines": 22,
      "isText": true
    },
    {
      "path": "src\\seed\\seed.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\seed\\seed.js.map",
      "name": "seed.js.map",
      "extension": ".map",
      "size": 847,
      "created": "2025-10-21T16:55:00.475Z",
      "modified": "2025-10-21T17:02:57.534Z",
      "content": "{\"version\":3,\"file\":\"seed.js\",\"sourceRoot\":\"\",\"sources\":[\"seed.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,MAAM,MAAM,QAAQ,CAAC;AAC5B,MAAM,CAAC,MAAM,EAAE,CAAC;AAChB,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAChD,OAAO,iBAAiB,MAAM,oBAAoB,CAAC;AAEnD,MAAM,OAAO,GAAG;IACd,cAAc,EAAC,cAAc,EAAC,cAAc,EAAC,cAAc;IAC3D,eAAe,EAAC,eAAe,EAAC,gBAAgB,EAAC,gBAAgB;CAClE,CAAC;AAEF,KAAK,UAAU,GAAG;IAChB,MAAM,iBAAiB,EAAE,CAAC;IAC1B,KAAK,MAAM,IAAI,IAAI,OAAO,EAAE,CAAC;QAC3B,MAAM,UAAU,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QACjE,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;IACtC,CAAC;IACD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IAC7B,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC;AAED,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;IAChB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACnB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\seed\\seed.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\seed\\seed.ts",
      "name": "seed.ts",
      "extension": ".ts",
      "size": 730,
      "created": "2025-10-21T11:09:55.246Z",
      "modified": "2025-10-21T13:48:01.951Z",
      "content": "import dotenv from \"dotenv\";\r\ndotenv.config();\r\nimport { ClassModel } from \"../models/Class.js\";\r\nimport connectToDatabase from \"../config/db/db.js\";\r\n\r\nconst classes = [\r\n  \"عامہ سال اول\",\"عامہ سال دوم\",\"خاصہ سال اول\",\"خاصہ سال دوم\",\r\n  \"عالیہ سال اول\",\"عالیہ سال دوم\",\"عالمیہ سال اول\",\"عالمیہ سال دوم\"\r\n];\r\n\r\nasync function run() {\r\n  await connectToDatabase();\r\n  for (const name of classes) {\r\n    await ClassModel.updateOne({ name }, { name }, { upsert: true });\r\n    console.log(\"ensured class:\", name);\r\n  }\r\n  console.log(\"Seed complete\");\r\n  process.exit(0);\r\n}\r\n\r\nrun().catch(err => {\r\n  console.error(err);\r\n  process.exit(1);\r\n});\r\n",
      "lines": 25,
      "isText": true
    },
    {
      "path": "src\\utils\\authMiddleware.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\utils\\authMiddleware.d.ts",
      "name": "authMiddleware.d.ts",
      "extension": ".ts",
      "size": 479,
      "created": "2025-10-21T16:55:00.275Z",
      "modified": "2025-10-21T17:02:57.370Z",
      "content": "import type { Request, Response, NextFunction } from \"express\";\nexport interface AuthRequest extends Request {\n    user?: any;\n}\nexport declare function requireAuth(req: AuthRequest, res: Response, next: NextFunction): Promise<Response<any, Record<string, any>> | undefined>;\nexport declare function requireRole(roles: string[]): (req: AuthRequest, res: Response, next: NextFunction) => Response<any, Record<string, any>> | undefined;\n//# sourceMappingURL=authMiddleware.d.ts.map",
      "lines": 7,
      "isText": true
    },
    {
      "path": "src\\utils\\authMiddleware.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\utils\\authMiddleware.d.ts.map",
      "name": "authMiddleware.d.ts.map",
      "extension": ".map",
      "size": 426,
      "created": "2025-10-21T16:55:00.275Z",
      "modified": "2025-10-21T17:02:57.364Z",
      "content": "{\"version\":3,\"file\":\"authMiddleware.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"authMiddleware.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,MAAM,SAAS,CAAC;AAI/D,MAAM,WAAW,WAAY,SAAQ,OAAO;IAC1C,IAAI,CAAC,EAAE,GAAG,CAAC;CACZ;AAED,wBAAsB,WAAW,CAAC,GAAG,EAAE,WAAW,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,YAAY,2DAgBpF;AAED,wBAAgB,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,IACjC,KAAK,WAAW,EAAE,KAAK,QAAQ,EAAE,MAAM,YAAY,oDAK5D\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\utils\\authMiddleware.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\utils\\authMiddleware.js",
      "name": "authMiddleware.js",
      "extension": ".js",
      "size": 1147,
      "created": "2025-10-21T16:55:00.259Z",
      "modified": "2025-10-21T17:02:57.358Z",
      "content": "import { verifyJwt } from \"./jwt.js\";\nimport { UserModel } from \"../models/User.js\";\nexport async function requireAuth(req, res, next) {\n    try {\n        const auth = req.headers.authorization;\n        if (!auth || !auth.startsWith(\"Bearer \"))\n            return res.status(401).json({ error: \"Unauthorized\" });\n        const token = auth.split(\" \")[1];\n        if (!token) {\n            return res.status(401).json({ error: \"Invalid token\" });\n        }\n        const payload = verifyJwt(token);\n        const user = await UserModel.findById(payload.userId).select(\"-passwordHash\");\n        if (!user)\n            return res.status(401).json({ error: \"Unauthorized\" });\n        req.user = user;\n        next();\n    }\n    catch (err) {\n        return res.status(401).json({ error: \"Invalid token\" });\n    }\n}\nexport function requireRole(roles) {\n    return (req, res, next) => {\n        if (!req.user)\n            return res.status(401).json({ error: \"Unauthorized\" });\n        if (!roles.includes(req.user.role))\n            return res.status(403).json({ error: \"Forbidden\" });\n        next();\n    };\n}\n//# sourceMappingURL=authMiddleware.js.map",
      "lines": 32,
      "isText": true
    },
    {
      "path": "src\\utils\\authMiddleware.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\utils\\authMiddleware.js.map",
      "name": "authMiddleware.js.map",
      "extension": ".map",
      "size": 1539,
      "created": "2025-10-21T16:55:00.259Z",
      "modified": "2025-10-21T17:02:57.358Z",
      "content": "{\"version\":3,\"file\":\"authMiddleware.js\",\"sourceRoot\":\"\",\"sources\":[\"authMiddleware.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,UAAU,CAAC;AACrC,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAM9C,MAAM,CAAC,KAAK,UAAU,WAAW,CAAC,GAAgB,EAAE,GAAa,EAAE,IAAkB;IACnF,IAAI,CAAC;QACH,MAAM,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC;QACvC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;YAAE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC,CAAC;QACjG,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC,IAAI,CAAC,KAAK,EAAE,CAAC;YACT,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,CAAC,CAAC;QAC5D,CAAC;QACD,MAAM,OAAO,GAAQ,SAAS,CAAC,KAAK,CAAC,CAAC;QACtC,MAAM,IAAI,GAAG,MAAM,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QAC9E,IAAI,CAAC,IAAI;YAAE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC,CAAC;QAClE,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,EAAE,CAAC;IACT,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,CAAC,CAAC;IAC1D,CAAC;AACH,CAAC;AAED,MAAM,UAAU,WAAW,CAAC,KAAe;IACzC,OAAO,CAAC,GAAgB,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;QAC7D,IAAI,CAAC,GAAG,CAAC,IAAI;YAAE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC,CAAC;QACtE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;YAAE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,CAAC;QACxF,IAAI,EAAE,CAAC;IACT,CAAC,CAAC;AACJ,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\utils\\authMiddleware.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\utils\\authMiddleware.ts",
      "name": "authMiddleware.ts",
      "extension": ".ts",
      "size": 1235,
      "created": "2025-10-21T11:06:19.554Z",
      "modified": "2025-10-21T11:40:30.899Z",
      "content": "import type { Request, Response, NextFunction } from \"express\";\r\nimport { verifyJwt } from \"./jwt.js\";\r\nimport { UserModel } from \"../models/User.js\";\r\n\r\nexport interface AuthRequest extends Request {\r\n  user?: any;\r\n}\r\n\r\nexport async function requireAuth(req: AuthRequest, res: Response, next: NextFunction) {\r\n  try {\r\n    const auth = req.headers.authorization;\r\n    if (!auth || !auth.startsWith(\"Bearer \")) return res.status(401).json({ error: \"Unauthorized\" });\r\n    const token = auth.split(\" \")[1];\r\n    if (!token) {\r\n        return res.status(401).json({ error: \"Invalid token\" });\r\n    }\r\n    const payload: any = verifyJwt(token);\r\n    const user = await UserModel.findById(payload.userId).select(\"-passwordHash\");\r\n    if (!user) return res.status(401).json({ error: \"Unauthorized\" });\r\n    req.user = user;\r\n    next();\r\n  } catch (err) {\r\n    return res.status(401).json({ error: \"Invalid token\" });\r\n  }\r\n}\r\n\r\nexport function requireRole(roles: string[]) {\r\n  return (req: AuthRequest, res: Response, next: NextFunction) => {\r\n    if (!req.user) return res.status(401).json({ error: \"Unauthorized\" });\r\n    if (!roles.includes(req.user.role)) return res.status(403).json({ error: \"Forbidden\" });\r\n    next();\r\n  };\r\n}\r\n",
      "lines": 34,
      "isText": true
    },
    {
      "path": "src\\utils\\hash.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\utils\\hash.d.ts",
      "name": "hash.d.ts",
      "extension": ".ts",
      "size": 198,
      "created": "2025-10-21T16:55:00.107Z",
      "modified": "2025-10-21T17:02:57.255Z",
      "content": "export declare function hashPassword(password: string): Promise<string>;\nexport declare function comparePassword(password: string, hash: string): Promise<boolean>;\n//# sourceMappingURL=hash.d.ts.map",
      "lines": 3,
      "isText": true
    },
    {
      "path": "src\\utils\\hash.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\utils\\hash.d.ts.map",
      "name": "hash.d.ts.map",
      "extension": ".map",
      "size": 202,
      "created": "2025-10-21T16:55:00.107Z",
      "modified": "2025-10-21T17:02:57.255Z",
      "content": "{\"version\":3,\"file\":\"hash.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"hash.ts\"],\"names\":[],\"mappings\":\"AAIA,wBAAsB,YAAY,CAAC,QAAQ,EAAE,MAAM,mBAElD;AAED,wBAAsB,eAAe,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,oBAEnE\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\utils\\hash.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\utils\\hash.js",
      "name": "hash.js",
      "extension": ".js",
      "size": 282,
      "created": "2025-10-21T16:55:00.107Z",
      "modified": "2025-10-21T17:02:57.247Z",
      "content": "import bcrypt from \"bcrypt\";\nconst SALT_ROUNDS = 10;\nexport async function hashPassword(password) {\n    return bcrypt.hash(password, SALT_ROUNDS);\n}\nexport async function comparePassword(password, hash) {\n    return bcrypt.compare(password, hash);\n}\n//# sourceMappingURL=hash.js.map",
      "lines": 9,
      "isText": true
    },
    {
      "path": "src\\utils\\hash.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\utils\\hash.js.map",
      "name": "hash.js.map",
      "extension": ".map",
      "size": 380,
      "created": "2025-10-21T16:55:00.105Z",
      "modified": "2025-10-21T17:02:57.247Z",
      "content": "{\"version\":3,\"file\":\"hash.js\",\"sourceRoot\":\"\",\"sources\":[\"hash.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,MAAM,MAAM,QAAQ,CAAC;AAE5B,MAAM,WAAW,GAAG,EAAE,CAAC;AAEvB,MAAM,CAAC,KAAK,UAAU,YAAY,CAAC,QAAgB;IACjD,OAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;AAC5C,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,eAAe,CAAC,QAAgB,EAAE,IAAY;IAClE,OAAO,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AACxC,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\utils\\hash.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\utils\\hash.ts",
      "name": "hash.ts",
      "extension": ".ts",
      "size": 284,
      "created": "2025-10-21T11:05:58.530Z",
      "modified": "2025-10-21T11:26:20.843Z",
      "content": "import bcrypt from \"bcrypt\";\r\n\r\nconst SALT_ROUNDS = 10;\r\n\r\nexport async function hashPassword(password: string) {\r\n  return bcrypt.hash(password, SALT_ROUNDS);\r\n}\r\n\r\nexport async function comparePassword(password: string, hash: string) {\r\n  return bcrypt.compare(password, hash);\r\n}\r\n",
      "lines": 12,
      "isText": true
    },
    {
      "path": "src\\utils\\jwt.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\utils\\jwt.d.ts",
      "name": "jwt.d.ts",
      "extension": ".ts",
      "size": 153,
      "created": "2025-10-21T16:55:00.123Z",
      "modified": "2025-10-21T17:02:57.267Z",
      "content": "export declare function signJwt(payload: object): string;\nexport declare function verifyJwt<T = any>(token: string): T;\n//# sourceMappingURL=jwt.d.ts.map",
      "lines": 3,
      "isText": true
    },
    {
      "path": "src\\utils\\jwt.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\utils\\jwt.d.ts.map",
      "name": "jwt.d.ts.map",
      "extension": ".map",
      "size": 208,
      "created": "2025-10-21T16:55:00.121Z",
      "modified": "2025-10-21T17:02:57.267Z",
      "content": "{\"version\":3,\"file\":\"jwt.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"jwt.ts\"],\"names\":[],\"mappings\":\"AAMA,wBAAgB,OAAO,CAAC,OAAO,EAAE,MAAM,UAKtC;AAED,wBAAgB,SAAS,CAAC,CAAC,GAAG,GAAG,EAAE,KAAK,EAAE,MAAM,GAAG,CAAC,CAEnD\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\utils\\jwt.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\utils\\jwt.js",
      "name": "jwt.js",
      "extension": ".js",
      "size": 501,
      "created": "2025-10-21T16:55:00.118Z",
      "modified": "2025-10-21T17:02:57.263Z",
      "content": "import jwt from \"jsonwebtoken\";\nconst JWT_SECRET = (process.env.JWT_SECRET ?? \"CHANGE_ME\");\nconst JWT_EXPIRES_IN = process.env.JWT_EXPIRES_IN ?? \"1d\"; // keep as string\nexport function signJwt(payload) {\n    const expiresIn = JWT_EXPIRES_IN ? Number(JWT_EXPIRES_IN) : undefined;\n    const options = expiresIn ? { expiresIn } : undefined;\n    return jwt.sign(payload, JWT_SECRET, options);\n}\nexport function verifyJwt(token) {\n    return jwt.verify(token, JWT_SECRET);\n}\n//# sourceMappingURL=jwt.js.map",
      "lines": 12,
      "isText": true
    },
    {
      "path": "src\\utils\\jwt.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\utils\\jwt.js.map",
      "name": "jwt.js.map",
      "extension": ".map",
      "size": 638,
      "created": "2025-10-21T16:55:00.117Z",
      "modified": "2025-10-21T17:02:57.263Z",
      "content": "{\"version\":3,\"file\":\"jwt.js\",\"sourceRoot\":\"\",\"sources\":[\"jwt.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,GAAG,MAAM,cAAc,CAAC;AAG/B,MAAM,UAAU,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,WAAW,CAAW,CAAC;AACrE,MAAM,cAAc,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,IAAI,IAAI,CAAC,CAAC,iBAAiB;AAE5E,MAAM,UAAU,OAAO,CAAC,OAAe;IACrC,MAAM,SAAS,GAAuB,cAAc,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IAC1F,MAAM,OAAO,GAA4B,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;IAE/E,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;AAChD,CAAC;AAED,MAAM,UAAU,SAAS,CAAU,KAAa;IAC9C,OAAO,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,CAAM,CAAC;AAC5C,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\utils\\jwt.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\utils\\jwt.ts",
      "name": "jwt.ts",
      "extension": ".ts",
      "size": 627,
      "created": "2025-10-21T11:06:07.505Z",
      "modified": "2025-10-21T11:38:22.542Z",
      "content": "import jwt from \"jsonwebtoken\";\r\nimport type { Secret, SignOptions } from \"jsonwebtoken\";\r\n\r\nconst JWT_SECRET = (process.env.JWT_SECRET ?? \"CHANGE_ME\") as Secret;\r\nconst JWT_EXPIRES_IN = process.env.JWT_EXPIRES_IN ?? \"1d\"; // keep as string\r\n\r\nexport function signJwt(payload: object) {\r\n  const expiresIn: number | undefined = JWT_EXPIRES_IN ? Number(JWT_EXPIRES_IN) : undefined;\r\n  const options: SignOptions | undefined = expiresIn ? { expiresIn } : undefined;\r\n\r\n  return jwt.sign(payload, JWT_SECRET, options);\r\n}\r\n\r\nexport function verifyJwt<T = any>(token: string): T {\r\n  return jwt.verify(token, JWT_SECRET) as T;\r\n}\r\n",
      "lines": 17,
      "isText": true
    },
    {
      "path": "src\\utils\\mailer.d.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\utils\\mailer.d.ts",
      "name": "mailer.d.ts",
      "extension": ".ts",
      "size": 212,
      "created": "2025-10-21T16:55:00.499Z",
      "modified": "2025-10-21T17:02:57.550Z",
      "content": "import \"dotenv/config\";\nexport declare function sendMail(to: string, subject: string, html: string): Promise<import(\"nodemailer/lib/smtp-transport/index.js\").SentMessageInfo>;\n//# sourceMappingURL=mailer.d.ts.map",
      "lines": 3,
      "isText": true
    },
    {
      "path": "src\\utils\\mailer.d.ts.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\utils\\mailer.d.ts.map",
      "name": "mailer.d.ts.map",
      "extension": ".map",
      "size": 203,
      "created": "2025-10-21T16:55:00.499Z",
      "modified": "2025-10-21T17:02:57.550Z",
      "content": "{\"version\":3,\"file\":\"mailer.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"mailer.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,eAAe,CAAC;AAUvB,wBAAsB,QAAQ,CAAC,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,6EAQvE\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\utils\\mailer.js",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\utils\\mailer.js",
      "name": "mailer.js",
      "extension": ".js",
      "size": 465,
      "created": "2025-10-21T16:55:00.484Z",
      "modified": "2025-10-21T17:02:57.541Z",
      "content": "import \"dotenv/config\";\nimport nodemailer from \"nodemailer\";\nconst transporter = nodemailer.createTransport({\n    service: 'Gmail',\n    auth: {\n        user: process.env.MAIL_USER,\n        pass: process.env.MAIL_PASS\n    }\n});\nexport async function sendMail(to, subject, html) {\n    const info = await transporter.sendMail({\n        from: process.env.MAIL_USER,\n        to,\n        subject,\n        html\n    });\n    return info;\n}\n//# sourceMappingURL=mailer.js.map",
      "lines": 19,
      "isText": true
    },
    {
      "path": "src\\utils\\mailer.js.map",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\utils\\mailer.js.map",
      "name": "mailer.js.map",
      "extension": ".map",
      "size": 550,
      "created": "2025-10-21T16:55:00.484Z",
      "modified": "2025-10-21T17:02:57.541Z",
      "content": "{\"version\":3,\"file\":\"mailer.js\",\"sourceRoot\":\"\",\"sources\":[\"mailer.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,eAAe,CAAC;AACvB,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,MAAM,WAAW,GAAG,UAAU,CAAC,eAAe,CAAC;IAC7C,OAAO,EAAE,OAAO;IAChB,IAAI,EAAE;QACJ,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS;QAC3B,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS;KAC5B;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,KAAK,UAAU,QAAQ,CAAC,EAAU,EAAE,OAAe,EAAE,IAAY;IACtE,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC,QAAQ,CAAC;QACtC,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS;QAC3B,EAAE;QACF,OAAO;QACP,IAAI;KACL,CAAC,CAAC;IACH,OAAO,IAAI,CAAC;AACd,CAAC\"}",
      "lines": 1,
      "isText": false
    },
    {
      "path": "src\\utils\\mailer.ts",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\utils\\mailer.ts",
      "name": "mailer.ts",
      "extension": ".ts",
      "size": 439,
      "created": "2025-10-21T11:06:37.701Z",
      "modified": "2025-10-21T12:11:06.737Z",
      "content": "import \"dotenv/config\";\r\nimport nodemailer from \"nodemailer\";\r\nconst transporter = nodemailer.createTransport({\r\n  service: 'Gmail',\r\n  auth: {\r\n    user: process.env.MAIL_USER,\r\n    pass: process.env.MAIL_PASS\r\n  }\r\n});\r\n\r\nexport async function sendMail(to: string, subject: string, html: string) {\r\n  const info = await transporter.sendMail({\r\n    from: process.env.MAIL_USER,\r\n    to,\r\n    subject,\r\n    html\r\n  });\r\n  return info;\r\n}\r\n",
      "lines": 20,
      "isText": true
    },
    {
      "path": "tsconfig.json",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\tsconfig.json",
      "name": "tsconfig.json",
      "extension": ".json",
      "size": 1224,
      "created": "2025-10-21T08:36:48.647Z",
      "modified": "2025-10-21T16:54:35.453Z",
      "content": "{\r\n  // Visit https://aka.ms/tsconfig to read more about this file\r\n  \"compilerOptions\": {\r\n    // File Layout\r\n    \"rootDir\": \"./src\",\r\n    // \"outDir\": \"./dist\",\r\n\r\n    // Environment Settings\r\n    // See also https://aka.ms/tsconfig/module\r\n    \"module\": \"nodenext\",\r\n    \"target\": \"esnext\",\r\n    \"types\": [],\r\n    // For nodejs:\r\n    // \"lib\": [\"esnext\"],\r\n    // \"types\": [\"node\"],\r\n    // and npm install -D @types/node\r\n    \"moduleResolution\": \"nodenext\",\r\n    // Other Outputs\r\n    \"sourceMap\": true,\r\n    \"declaration\": true,\r\n    \"declarationMap\": true,\r\n\r\n    // Stricter Typechecking Options\r\n    \"noUncheckedIndexedAccess\": true,\r\n    \"exactOptionalPropertyTypes\": true,\r\n\r\n    // Style Options\r\n    // \"noImplicitReturns\": true,\r\n    // \"noImplicitOverride\": true,\r\n    // \"noUnusedLocals\": true,\r\n    // \"noUnusedParameters\": true,\r\n    // \"noFallthroughCasesInSwitch\": true,\r\n    // \"noPropertyAccessFromIndexSignature\": true,\r\n\r\n    // Recommended Options\r\n    \"strict\": true,\r\n    \"jsx\": \"react-jsx\",\r\n    \"verbatimModuleSyntax\": true,\r\n    \"isolatedModules\": true,\r\n    \"noUncheckedSideEffectImports\": true,\r\n    \"moduleDetection\": \"force\",\r\n    \"skipLibCheck\": true,\r\n  },\r\n  \"include\": [\"src/**/*\"]\r\n}\r\n",
      "lines": 46,
      "isText": true
    },
    {
      "path": "vercel.json",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\vercel.json",
      "name": "vercel.json",
      "extension": ".json",
      "size": 438,
      "created": "2025-10-21T15:14:20.349Z",
      "modified": "2025-10-21T17:02:23.827Z",
      "content": "{\r\n  \"version\": 2,\r\n  \"builds\": [\r\n    {\r\n      \"src\": \"src/index.mjs\",\r\n      \"use\": \"@vercel/node\",\r\n      \"config\": {\r\n        \"includeFiles\": [\r\n          \"public/**\",\r\n          \"src/config/**\",\r\n          \"src/controllers/**\",\r\n          \"src/models/**\",\r\n          \"src/routes/**\",\r\n          \"src/utils/**\"\r\n        ]\r\n      }\r\n    }\r\n  ],\r\n  \"routes\": [\r\n    {\r\n      \"src\": \"/(.*)\",\r\n      \"dest\": \"src/index.mjs\"\r\n    }\r\n  ]\r\n}",
      "lines": 25,
      "isText": true
    }
  ],
  "directories": [
    {
      "path": "public",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\public",
      "name": "public"
    },
    {
      "path": "src",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src",
      "name": "src"
    },
    {
      "path": "src\\config",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\config",
      "name": "config"
    },
    {
      "path": "src\\config\\db",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\config\\db",
      "name": "db"
    },
    {
      "path": "src\\controllers",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\controllers",
      "name": "controllers"
    },
    {
      "path": "src\\models",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\models",
      "name": "models"
    },
    {
      "path": "src\\routes",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\routes",
      "name": "routes"
    },
    {
      "path": "src\\seed",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\seed",
      "name": "seed"
    },
    {
      "path": "src\\utils",
      "absolutePath": "d:\\Jamia-Tun-Noor\\talabaoasatiza\\src\\utils",
      "name": "utils"
    }
  ],
  "summary": {
    "totalFiles": 135,
    "totalDirectories": 9,
    "totalSize": 111842,
    "fileTypes": {
      ".example": 1,
      ".json": 3,
      ".html": 1,
      ".ts": 50,
      ".map": 52,
      ".js": 25,
      ".mts": 2,
      ".mjs": 1
    }
  }
}